{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\n// Cambia esta URL por la de tu backend\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/productions/pendientes';\nexport function useValidacionApi() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Obtener validaciones\n  const fetchValidaciones = async decena => {\n    setLoading(true);\n    setError(null);\n    try {\n      const url = decena ? `${API_URL}?decena=${decena}` : API_URL;\n      const res = await fetch(url);\n      if (!res.ok) throw new Error('Error al obtener validaciones');\n      return await res.json();\n    } catch (err) {\n      setError(err.message);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Aprobar o rechazar validaci贸n\n  const validar = async (id, aprobado, comentarios) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(`${API_URL}/${id}/validate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          aprobado,\n          comentarios\n        })\n      });\n      if (!res.ok) throw new Error('Error al validar producci贸n');\n      return true;\n    } catch (err) {\n      setError(err.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    fetchValidaciones,\n    validar,\n    loading,\n    error\n  };\n}\n\n/**\r\n * Ejemplo de uso:\r\n *\r\n * const { fetchValidaciones, validar, loading, error } = useValidacionApi();\r\n *\r\n * useEffect(() => { fetchValidaciones(); }, []);\r\n *\r\n * validar(id, true, 'Aprobado sin observaciones');\r\n */\n_s(useValidacionApi, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");","map":{"version":3,"names":["useState","API_URL","process","env","REACT_APP_API_URL","useValidacionApi","_s","loading","setLoading","error","setError","fetchValidaciones","decena","url","res","fetch","ok","Error","json","err","message","validar","id","aprobado","comentarios","method","headers","body","JSON","stringify"],"sources":["C:/Users/pasaj/Music/pullman-payment-system/frontend/src/hooks/useValidacionApi.ts"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport interface Validacion {\r\n  id?: number;\r\n  decena: string;\r\n  total: number;\r\n  validado: boolean;\r\n  comentarios: string;\r\n  entrepreneur: { nombre: string };\r\n}\r\n\r\n// Cambia esta URL por la de tu backend\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/productions/pendientes';\r\n\r\nexport function useValidacionApi() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Obtener validaciones\r\n  const fetchValidaciones = async (decena?: string): Promise<Validacion[]> => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const url = decena ? `${API_URL}?decena=${decena}` : API_URL;\r\n      const res = await fetch(url);\r\n      if (!res.ok) throw new Error('Error al obtener validaciones');\r\n      return await res.json();\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Aprobar o rechazar validaci贸n\r\n  const validar = async (id: number, aprobado: boolean, comentarios: string): Promise<boolean> => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const res = await fetch(`${API_URL}/${id}/validate`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ aprobado, comentarios }),\r\n      });\r\n      if (!res.ok) throw new Error('Error al validar producci贸n');\r\n      return true;\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    fetchValidaciones,\r\n    validar,\r\n    loading,\r\n    error,\r\n  };\r\n}\r\n\r\n/**\r\n * Ejemplo de uso:\r\n *\r\n * const { fetchValidaciones, validar, loading, error } = useValidacionApi();\r\n *\r\n * useEffect(() => { fetchValidaciones(); }, []);\r\n *\r\n * validar(id, true, 'Aprobado sin observaciones');\r\n */ "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAWhC;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,kDAAkD;AAEnG,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;;EAEvD;EACA,MAAMW,iBAAiB,GAAG,MAAOC,MAAe,IAA4B;IAC1EJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,GAAG,GAAGD,MAAM,GAAG,GAAGX,OAAO,WAAWW,MAAM,EAAE,GAAGX,OAAO;MAC5D,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC5B,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACjBT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,EAAE;IACX,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMa,OAAO,GAAG,MAAAA,CAAOC,EAAU,EAAEC,QAAiB,EAAEC,WAAmB,KAAuB;IAC9FhB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGd,OAAO,IAAIqB,EAAE,WAAW,EAAE;QACnDG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEN,QAAQ;UAAEC;QAAY,CAAC;MAChD,CAAC,CAAC;MACF,IAAI,CAACV,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,OAAO,IAAI;IACb,CAAC,CAAC,OAAOE,GAAQ,EAAE;MACjBT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,KAAK;IACd,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLG,iBAAiB;IACjBU,OAAO;IACPd,OAAO;IACPE;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARAH,EAAA,CAjDgBD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}