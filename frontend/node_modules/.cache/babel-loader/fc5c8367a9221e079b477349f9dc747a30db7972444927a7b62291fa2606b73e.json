{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pasaj\\\\Music\\\\pullman-payment-system\\\\frontend\\\\src\\\\modules\\\\Produccion\\\\CalculoProduccion.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { tripsApi } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Función para normalizar strings (idéntica a backend, compatible universalmente)\nfunction normalize(str) {\n  if (!str) return '';\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') // Eliminar tildes\n  .toLowerCase().replace(/\\s+/g, ' ').trim();\n}\n\n// Función para obtener la decena actual\nfunction getDecenaActual() {\n  const ahora = new Date();\n  const mes = ahora.getMonth() + 1; // getMonth() devuelve 0-11\n  const año = ahora.getFullYear();\n  const dia = ahora.getDate();\n\n  // Determinar qué decena estamos\n  let decena = 1;\n  if (dia > 20) decena = 3;else if (dia > 10) decena = 2;\n  return `${decena}${mes.toString().padStart(2, '0')}${año}`;\n}\n\n// Función para obtener fechas de una decena\nfunction getFechasDecena(decenaStr) {\n  const decena = parseInt(decenaStr.charAt(0));\n  const mes = parseInt(decenaStr.substring(1, 3));\n  const año = parseInt(decenaStr.substring(3));\n  let diaInicio = 1;\n  let diaFin = 10;\n  if (decena === 2) {\n    diaInicio = 11;\n    diaFin = 20;\n  } else if (decena === 3) {\n    diaInicio = 21;\n    // Obtener el último día del mes (0 significa último día del mes anterior)\n    const ultimoDia = new Date(año, mes, 0).getDate();\n    diaFin = ultimoDia;\n  }\n  const desde = `${año}-${mes.toString().padStart(2, '0')}-${diaInicio.toString().padStart(2, '0')}`;\n  const hasta = `${año}-${mes.toString().padStart(2, '0')}-${diaFin.toString().padStart(2, '0')}`;\n  return {\n    desde,\n    hasta\n  };\n}\n\n// Función para generar opciones de decenas (últimos 12 meses)\nfunction generarOpcionesDecenas() {\n  const opciones = [];\n  const ahora = new Date();\n  for (let i = 0; i < 12; i++) {\n    const fecha = new Date(ahora.getFullYear(), ahora.getMonth() - i, 1);\n    const mes = fecha.getMonth() + 1;\n    const año = fecha.getFullYear();\n\n    // Agregar las 3 decenas del mes\n    opciones.push(`1${mes.toString().padStart(2, '0')}${año}`);\n    opciones.push(`2${mes.toString().padStart(2, '0')}${año}`);\n    opciones.push(`3${mes.toString().padStart(2, '0')}${año}`);\n  }\n  return opciones;\n}\n\n// Función para obtener el nombre del mes y año de una decena\nfunction getNombreMesDecena(decenaStr) {\n  const mes = parseInt(decenaStr.substring(1, 3));\n  const año = parseInt(decenaStr.substring(3));\n  const fecha = new Date(año, mes - 1, 1); // mes - 1 porque getMonth() devuelve 0-11\n  return fecha.toLocaleDateString('es-ES', {\n    month: 'long',\n    year: 'numeric'\n  });\n}\nconst CalculoProduccion = () => {\n  _s();\n  const [trips, setTrips] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [producciones, setProducciones] = useState([]);\n  const [detalleEmpresario, setDetalleEmpresario] = useState(null);\n  const [decenaSeleccionada, setDecenaSeleccionada] = useState(getDecenaActual());\n  const [generatingProductions, setGeneratingProductions] = useState(false);\n  const [generationMessage, setGenerationMessage] = useState('');\n  const [generationType, setGenerationType] = useState(null);\n  const [loadingTrips, setLoadingTrips] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState('');\n  useEffect(() => {\n    fetchTrips();\n    fetch('/api/zones?page=0&size=1000').then(res => res.json()).then(data => setZones(data.content || data));\n    fetch('/api/routes?page=0&size=1000').then(res => res.json()).then(data => setRoutes(data.content || []));\n    fetch('/api/productions').then(res => res.json()).then(data => setProducciones(Array.isArray(data) ? data : []));\n  }, []);\n  const fetchTrips = async () => {\n    setLoadingTrips(true);\n    setLoadingProgress('Iniciando carga de viajes...');\n    try {\n      console.log('Cargando todos los viajes para Producción...');\n      const data = await tripsApi.getAllComplete();\n\n      // Calcular totalIngresos para cada viaje\n      const tripsWithTotal = data.map(v => {\n        const branch = Number(v.branchRevenue) || 0;\n        const road = Number(v.roadRevenue) || 0;\n        // manualIncome puede ser string, intenta convertir a número\n        let manual = 0;\n        if (v.manualIncome !== undefined && v.manualIncome !== null && v.manualIncome !== '') {\n          manual = Number(String(v.manualIncome).replace(/[^\\d.\\-]/g, '')) || 0;\n        }\n        return {\n          ...v,\n          totalIngresos: branch + road + manual\n        };\n      });\n      setTrips(tripsWithTotal);\n      setLoadingProgress(`Carga completada: ${tripsWithTotal.length} viajes`);\n      console.log(`Viajes cargados para Producción: ${tripsWithTotal.length}`);\n    } catch (err) {\n      console.error('Error fetching trips for Producción:', err);\n      setLoadingProgress('Error al cargar viajes');\n    } finally {\n      setLoadingTrips(false);\n      setTimeout(() => setLoadingProgress(''), 3000);\n    }\n  };\n\n  // Función para generar producciones automáticamente\n  const generateProductions = async decena => {\n    setGeneratingProductions(true);\n    setGenerationMessage('');\n    setGenerationType(null);\n    try {\n      const response = await fetch(`/api/productions/generate?decena=${decena}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.generatedCount > 0) {\n          setGenerationMessage(`✅ ${result.message}. Se generaron ${result.generatedCount} producciones para la decena ${result.decena}.`);\n          setGenerationType('success');\n          // Recargar producciones después de generar\n          fetch('/api/productions').then(res => res.json()).then(data => setProducciones(data));\n        } else {\n          setGenerationMessage('');\n          setGenerationType(null);\n        }\n      } else {\n        const error = await response.json();\n        setGenerationMessage(`❌ Error: ${error.error || 'No se pudieron generar las producciones'}`);\n        setGenerationType('error');\n      }\n    } catch (error) {\n      setGenerationMessage(`❌ Error de conexión: ${error}`);\n      setGenerationType('error');\n    } finally {\n      setGeneratingProductions(false);\n    }\n  };\n\n  // Generar producciones automáticamente cuando se carga el componente\n  useEffect(() => {\n    if (trips.length > 0 && zones.length > 0 && routes.length > 0) {\n      generateProductions(decenaSeleccionada);\n    }\n  }, [trips.length, zones.length, routes.length, decenaSeleccionada]);\n\n  // Eliminar duplicados de fechaDesde y fechaHasta\n  // Ya no se usan useState para fechaDesde y fechaHasta, solo las derivadas de la decena\n  // const { desde: fechaDesde, hasta: fechaHasta } = getFechasDecena(decenaSeleccionada);\n\n  // Filtrar viajes por decena seleccionada\n  const {\n    desde,\n    hasta\n  } = getFechasDecena(decenaSeleccionada);\n  const viajesParaCalcular = trips.filter(v => {\n    if (!v.travelDate) return false;\n    const fechaViaje = v.travelDate.slice(0, 10); // formato YYYY-MM-DD\n    return fechaViaje >= desde && fechaViaje <= hasta;\n  });\n\n  // DEBUG: Logs para depuración de filtro de fechas\n  if (trips.length > 0) {\n    const fueraDeRango = trips.filter(v => {\n      if (!v.travelDate) return false;\n      const fechaViaje = v.travelDate.slice(0, 10);\n      return !(fechaViaje >= desde && fechaViaje <= hasta);\n    });\n    // Solo mostrar si hay decena seleccionada\n    console.log('Decena seleccionada:', decenaSeleccionada, '| Rango:', desde, 'a', hasta);\n    console.log('Total viajes:', trips.length, '| Viajes en decena:', viajesParaCalcular.length, '| Fuera de rango:', fueraDeRango.length);\n    if (fueraDeRango.length > 0) {\n      console.log('Fechas fuera de rango:', fueraDeRango.map(v => v.travelDate));\n    }\n    // Mostrar fechas límite presentes\n    const fechasEnDecena = viajesParaCalcular.filter(v => v.travelDate).map(v => v.travelDate.slice(0, 10));\n    if (fechasEnDecena.includes(desde)) {\n      console.log('Incluye fecha de inicio:', desde);\n    } else {\n      console.warn('NO incluye fecha de inicio:', desde);\n    }\n    if (fechasEnDecena.includes(hasta)) {\n      console.log('Incluye fecha de fin:', hasta);\n    } else {\n      console.warn('NO incluye fecha de fin:', hasta);\n    }\n  }\n\n  // Validar que la fecha \"hasta\" sea mayor o igual que \"desde\"\n  const fechaValida = true; // Ya no se usa fechaDesde y fechaHasta directamente\n  const mensajeError = ''; // Ya no se usa fechaDesde y fechaHasta directamente\n\n  // Usar todos los viajes para calcular por defecto\n  // const viajesParaCalcular = trips; // This line is now redundant as viajesParaCalcular is defined above\n\n  // Buscar zona por origen/destino\n  const getZonaPorTramo = (origen, destino) => {\n    const normOrigen = normalize(origen);\n    const normDestino = normalize(destino);\n    for (const route of routes) {\n      const rOrig = normalize(route.origen);\n      const rDest = normalize(route.destino);\n      // Comparar ambos sentidos, idéntico a backend\n      if (rOrig === normOrigen && rDest === normDestino || rOrig === normDestino && rDest === normOrigen) {\n        return route.zona;\n      }\n    }\n    return null;\n  };\n\n  // Agrupar viajes por empresa usando normalización igual que backend\n  const normalizarEmpresa = nombre => normalize(nombre);\n  const empresasNormalizadas = Array.from(new Set(viajesParaCalcular.filter(v => v.companyName && v.companyName.trim() !== \"\").map(v => normalizarEmpresa(v.companyName))));\n\n  // Mapear nombre normalizado a nombre original (para mostrar)\n  const mapEmpresaOriginal = new Map();\n  viajesParaCalcular.forEach(v => {\n    if (v.companyName && v.companyName.trim() !== \"\") {\n      const norm = normalizarEmpresa(v.companyName);\n      if (!mapEmpresaOriginal.has(norm)) {\n        mapEmpresaOriginal.set(norm, v.companyName);\n      }\n    }\n  });\n\n  // Calcular resumen por empresario (desde viajes)\n  const resumenCalculado = empresasNormalizadas.map(empNorm => {\n    const viajesEmp = viajesParaCalcular.filter(v => normalizarEmpresa(v.companyName) === empNorm);\n    let totalServicios = 0;\n    let totalIngresos = 0;\n    let totalGanancia = 0;\n    let sinZona = 0;\n    let conZona = 0;\n    const viajesSinZona = [];\n    viajesEmp.forEach(v => {\n      const zona = getZonaPorTramo(v.origin, v.destination);\n      const porcentaje = zona ? zona.porcentaje : 0;\n      totalServicios++;\n      totalIngresos += v.totalIngresos;\n      if (zona) {\n        totalGanancia += v.totalIngresos * (porcentaje / 100);\n        conZona++;\n      } else {\n        sinZona++;\n        viajesSinZona.push({\n          origin: v.origin,\n          destination: v.destination,\n          companyName: v.companyName,\n          travelDate: v.travelDate\n        });\n      }\n    });\n    // LOG de depuración por empresa\n    if (viajesSinZona.length > 0) {\n      console.warn(`Viajes SIN zona para empresa ${mapEmpresaOriginal.get(empNorm) || empNorm}:`, viajesSinZona);\n    }\n    console.log(`Empresa: ${mapEmpresaOriginal.get(empNorm) || empNorm} | Total viajes: ${viajesEmp.length} | Con zona: ${conZona} | Sin zona: ${sinZona} | Ingresos: ${totalIngresos} | Ganancia calculada: ${totalGanancia}`);\n    return {\n      emp: mapEmpresaOriginal.get(empNorm) || empNorm,\n      totalServicios,\n      totalIngresos,\n      totalGanancia,\n      conZona,\n      sinZona\n    };\n  });\n\n  // Obtener producciones guardadas en BD para la decena seleccionada\n  const produccionesFiltradas = producciones.filter(p => p.decena === decenaSeleccionada);\n  const gananciaTotalBD = produccionesFiltradas.reduce((acc, p) => acc + (p.total || 0), 0);\n\n  // Combinar datos calculados con datos guardados\n  const resumenCombinado = resumenCalculado.map(calc => {\n    const prodBD = produccionesFiltradas.find(p => {\n      var _p$entrepreneur;\n      return ((_p$entrepreneur = p.entrepreneur) === null || _p$entrepreneur === void 0 ? void 0 : _p$entrepreneur.nombre) === calc.emp;\n    });\n    return {\n      ...calc,\n      gananciaBD: (prodBD === null || prodBD === void 0 ? void 0 : prodBD.total) || 0,\n      validado: (prodBD === null || prodBD === void 0 ? void 0 : prodBD.validado) || false,\n      comentarios: (prodBD === null || prodBD === void 0 ? void 0 : prodBD.comentarios) || ''\n    };\n  });\n\n  // Detalle por zona para un empresario\n  const getDetallePorZona = empresario => {\n    const viajesEmp = viajesParaCalcular.filter(v => v.companyName === empresario);\n    const zonasMap = {};\n    viajesEmp.forEach(v => {\n      const zona = getZonaPorTramo(v.origin, v.destination);\n      if (zona) {\n        if (!zonasMap[zona.id]) {\n          zonasMap[zona.id] = {\n            zona,\n            servicios: 0,\n            ingresos: 0,\n            ganancia: 0\n          };\n        }\n        zonasMap[zona.id].servicios++;\n        zonasMap[zona.id].ingresos += v.totalIngresos;\n        zonasMap[zona.id].ganancia += v.totalIngresos * (zona.porcentaje / 100);\n      }\n    });\n    return Object.values(zonasMap);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Producci\\xF3n por Empresario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 p-4 rounded-lg mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-3\",\n        children: \"Ganancia por Decena\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Seleccionar Decena:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: decenaSeleccionada,\n          onChange: e => setDecenaSeleccionada(e.target.value),\n          className: \"border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          children: generarOpcionesDecenas().map(decena => {\n            const decenaNum = decena.charAt(0);\n            const nombreMesAño = getNombreMesDecena(decena);\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: decena,\n              children: [decenaNum, \"\\xAA Decena \", nombreMesAño]\n            }, decena, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), loadingTrips && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 rounded border bg-blue-100 text-blue-700 border-blue-300\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-700 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), loadingProgress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }, this), generationMessage && generationType === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 rounded border bg-green-100 text-green-700 border-green-300\",\n      children: generationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this), generationMessage && generationType === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 rounded border bg-red-100 text-red-700 border-red-300\",\n      children: generationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-50 rounded-lg flex flex-col md:flex-row md:justify-between md:items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Ganancia oficial (guardada en BD): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg font-bold text-green-700\",\n          title: \"Este es el valor oficial que se paga\",\n          children: [\"$\", resumenCombinado.reduce((acc, r) => acc + r.gananciaBD, 0).toLocaleString(undefined, {\n            maximumFractionDigits: 2\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-gray-500 mb-2\",\n      children: \"* La ganancia mostrada es la oficial para pago. Si hay diferencias, revisa los datos de viajes, zonas y vuelve a generar producciones.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full border divide-y divide-gray-200 text-sm mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Empresario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Servicios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Total Ingresos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Ganancia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Detalle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: resumenCombinado.map(r => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-4 py-2 font-medium\",\n            children: r.emp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-4 py-2\",\n            children: r.totalServicios\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-4 py-2\",\n            children: [\"$\", r.totalIngresos.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-4 py-2 text-green-700 font-bold\",\n            title: \"Valor oficial para pago\",\n            children: [\"$\", r.gananciaBD.toLocaleString(undefined, {\n              maximumFractionDigits: 2\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"px-4 py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-600 text-white px-2 py-1 rounded\",\n              onClick: () => setDetalleEmpresario(r.emp),\n              children: \"Ver detalle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, r.emp, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), detalleEmpresario && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded shadow p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-4\",\n        children: [\"Detalle de producci\\xF3n: \", detalleEmpresario]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mb-4 text-blue-600 underline\",\n        onClick: () => setDetalleEmpresario(null),\n        children: \"Volver al resumen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full border divide-y divide-gray-200 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Zona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"% Zona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Servicios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Ingresos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Ganancia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getDetallePorZona(detalleEmpresario).map(z => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: z.zona.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: [z.zona.porcentaje, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: z.servicios\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: [\"$\", z.ingresos.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: [\"$\", z.ganancia.toLocaleString(undefined, {\n                maximumFractionDigits: 2\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 19\n            }, this)]\n          }, z.zona.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n};\n_s(CalculoProduccion, \"ZyED6ZOLzRCSTguQwavkFlETQdk=\");\n_c = CalculoProduccion;\nexport default CalculoProduccion;\nvar _c;\n$RefreshReg$(_c, \"CalculoProduccion\");","map":{"version":3,"names":["React","useState","useEffect","tripsApi","jsxDEV","_jsxDEV","normalize","str","replace","toLowerCase","trim","getDecenaActual","ahora","Date","mes","getMonth","año","getFullYear","dia","getDate","decena","toString","padStart","getFechasDecena","decenaStr","parseInt","charAt","substring","diaInicio","diaFin","ultimoDia","desde","hasta","generarOpcionesDecenas","opciones","i","fecha","push","getNombreMesDecena","toLocaleDateString","month","year","CalculoProduccion","_s","trips","setTrips","zones","setZones","routes","setRoutes","producciones","setProducciones","detalleEmpresario","setDetalleEmpresario","decenaSeleccionada","setDecenaSeleccionada","generatingProductions","setGeneratingProductions","generationMessage","setGenerationMessage","generationType","setGenerationType","loadingTrips","setLoadingTrips","loadingProgress","setLoadingProgress","fetchTrips","fetch","then","res","json","data","content","Array","isArray","console","log","getAllComplete","tripsWithTotal","map","v","branch","Number","branchRevenue","road","roadRevenue","manual","manualIncome","undefined","String","totalIngresos","length","err","error","setTimeout","generateProductions","response","method","headers","ok","result","generatedCount","message","viajesParaCalcular","filter","travelDate","fechaViaje","slice","fueraDeRango","fechasEnDecena","includes","warn","fechaValida","mensajeError","getZonaPorTramo","origen","destino","normOrigen","normDestino","route","rOrig","rDest","zona","normalizarEmpresa","nombre","empresasNormalizadas","from","Set","companyName","mapEmpresaOriginal","Map","forEach","norm","has","set","resumenCalculado","empNorm","viajesEmp","totalServicios","totalGanancia","sinZona","conZona","viajesSinZona","origin","destination","porcentaje","get","emp","produccionesFiltradas","p","gananciaTotalBD","reduce","acc","total","resumenCombinado","calc","prodBD","find","_p$entrepreneur","entrepreneur","gananciaBD","validado","comentarios","getDetallePorZona","empresario","zonasMap","id","servicios","ingresos","ganancia","Object","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","decenaNum","nombreMesAño","title","r","toLocaleString","maximumFractionDigits","onClick","z","_c","$RefreshReg$"],"sources":["C:/Users/pasaj/Music/pullman-payment-system/frontend/src/modules/Produccion/CalculoProduccion.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { tripsApi } from '../../services/api';\r\n\r\ninterface Trip {\r\n  id: number;\r\n  origin: string;\r\n  destination: string;\r\n  companyName: string;\r\n  branchRevenue?: number;\r\n  roadRevenue?: number;\r\n  manualIncome?: string | number;\r\n  totalIngresos: number;\r\n  travelDate?: string;\r\n}\r\n\r\ninterface Route {\r\n  id: number;\r\n  origen: string;\r\n  destino: string;\r\n  kilometraje: number;\r\n  zona: { id: number; nombre: string; porcentaje: number };\r\n}\r\n\r\ninterface Zone {\r\n  id: number;\r\n  nombre: string;\r\n  porcentaje: number;\r\n}\r\n\r\ninterface Production {\r\n  id: number;\r\n  decena: string;\r\n  total: number;\r\n  validado: boolean;\r\n  comentarios: string;\r\n  entrepreneur: { nombre: string };\r\n}\r\n\r\n// Función para normalizar strings (idéntica a backend, compatible universalmente)\r\nfunction normalize(str: string): string {\r\n  if (!str) return '';\r\n  return str\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '') // Eliminar tildes\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, ' ')\r\n    .trim();\r\n}\r\n\r\n// Función para obtener la decena actual\r\nfunction getDecenaActual(): string {\r\n  const ahora = new Date();\r\n  const mes = ahora.getMonth() + 1; // getMonth() devuelve 0-11\r\n  const año = ahora.getFullYear();\r\n  const dia = ahora.getDate();\r\n  \r\n  // Determinar qué decena estamos\r\n  let decena = 1;\r\n  if (dia > 20) decena = 3;\r\n  else if (dia > 10) decena = 2;\r\n  \r\n  return `${decena}${mes.toString().padStart(2, '0')}${año}`;\r\n}\r\n\r\n// Función para obtener fechas de una decena\r\nfunction getFechasDecena(decenaStr: string): { desde: string; hasta: string } {\r\n  const decena = parseInt(decenaStr.charAt(0));\r\n  const mes = parseInt(decenaStr.substring(1, 3));\r\n  const año = parseInt(decenaStr.substring(3));\r\n  \r\n  let diaInicio = 1;\r\n  let diaFin = 10;\r\n  \r\n  if (decena === 2) {\r\n    diaInicio = 11;\r\n    diaFin = 20;\r\n  } else if (decena === 3) {\r\n    diaInicio = 21;\r\n    // Obtener el último día del mes (0 significa último día del mes anterior)\r\n    const ultimoDia = new Date(año, mes, 0).getDate();\r\n    diaFin = ultimoDia;\r\n  }\r\n  \r\n  const desde = `${año}-${mes.toString().padStart(2, '0')}-${diaInicio.toString().padStart(2, '0')}`;\r\n  const hasta = `${año}-${mes.toString().padStart(2, '0')}-${diaFin.toString().padStart(2, '0')}`;\r\n  \r\n  return { desde, hasta };\r\n}\r\n\r\n// Función para generar opciones de decenas (últimos 12 meses)\r\nfunction generarOpcionesDecenas(): string[] {\r\n  const opciones: string[] = [];\r\n  const ahora = new Date();\r\n  \r\n  for (let i = 0; i < 12; i++) {\r\n    const fecha = new Date(ahora.getFullYear(), ahora.getMonth() - i, 1);\r\n    const mes = fecha.getMonth() + 1;\r\n    const año = fecha.getFullYear();\r\n    \r\n    // Agregar las 3 decenas del mes\r\n    opciones.push(`1${mes.toString().padStart(2, '0')}${año}`);\r\n    opciones.push(`2${mes.toString().padStart(2, '0')}${año}`);\r\n    opciones.push(`3${mes.toString().padStart(2, '0')}${año}`);\r\n  }\r\n  \r\n  return opciones;\r\n}\r\n\r\n// Función para obtener el nombre del mes y año de una decena\r\nfunction getNombreMesDecena(decenaStr: string): string {\r\n  const mes = parseInt(decenaStr.substring(1, 3));\r\n  const año = parseInt(decenaStr.substring(3));\r\n  const fecha = new Date(año, mes - 1, 1); // mes - 1 porque getMonth() devuelve 0-11\r\n  return fecha.toLocaleDateString('es-ES', { month: 'long', year: 'numeric' });\r\n}\r\n\r\nconst CalculoProduccion: React.FC = () => {\r\n  const [trips, setTrips] = useState<Trip[]>([]);\r\n  const [zones, setZones] = useState<Zone[]>([]);\r\n  const [routes, setRoutes] = useState<Route[]>([]);\r\n  const [producciones, setProducciones] = useState<Production[]>([]);\r\n  const [detalleEmpresario, setDetalleEmpresario] = useState<string | null>(null);\r\n  const [decenaSeleccionada, setDecenaSeleccionada] = useState<string>(getDecenaActual());\r\n  const [generatingProductions, setGeneratingProductions] = useState<boolean>(false);\r\n  const [generationMessage, setGenerationMessage] = useState<string>('');\r\n  const [generationType, setGenerationType] = useState<'success' | 'error' | null>(null);\r\n  const [loadingTrips, setLoadingTrips] = useState<boolean>(false);\r\n  const [loadingProgress, setLoadingProgress] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    fetchTrips();\r\n    fetch('/api/zones?page=0&size=1000')\r\n      .then(res => res.json())\r\n      .then(data => setZones(data.content || data));\r\n    fetch('/api/routes?page=0&size=1000')\r\n      .then(res => res.json())\r\n      .then(data => setRoutes(data.content || []));\r\n    fetch('/api/productions')\r\n      .then(res => res.json())\r\n      .then(data => setProducciones(Array.isArray(data) ? data : []));\r\n  }, []);\r\n\r\n  const fetchTrips = async () => {\r\n    setLoadingTrips(true);\r\n    setLoadingProgress('Iniciando carga de viajes...');\r\n    \r\n    try {\r\n      console.log('Cargando todos los viajes para Producción...');\r\n      const data = await tripsApi.getAllComplete();\r\n      \r\n      // Calcular totalIngresos para cada viaje\r\n      const tripsWithTotal = data.map((v: any) => {\r\n        const branch = Number(v.branchRevenue) || 0;\r\n        const road = Number(v.roadRevenue) || 0;\r\n        // manualIncome puede ser string, intenta convertir a número\r\n        let manual = 0;\r\n        if (v.manualIncome !== undefined && v.manualIncome !== null && v.manualIncome !== '') {\r\n          manual = Number(String(v.manualIncome).replace(/[^\\d.\\-]/g, '')) || 0;\r\n        }\r\n        return {\r\n          ...v,\r\n          totalIngresos: branch + road + manual,\r\n        };\r\n      });\r\n      \r\n      setTrips(tripsWithTotal);\r\n      setLoadingProgress(`Carga completada: ${tripsWithTotal.length} viajes`);\r\n      console.log(`Viajes cargados para Producción: ${tripsWithTotal.length}`);\r\n    } catch (err) {\r\n      console.error('Error fetching trips for Producción:', err);\r\n      setLoadingProgress('Error al cargar viajes');\r\n    } finally {\r\n      setLoadingTrips(false);\r\n      setTimeout(() => setLoadingProgress(''), 3000);\r\n    }\r\n  };\r\n\r\n  // Función para generar producciones automáticamente\r\n  const generateProductions = async (decena: string) => {\r\n    setGeneratingProductions(true);\r\n    setGenerationMessage('');\r\n    setGenerationType(null);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/productions/generate?decena=${decena}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        if (result.generatedCount > 0) {\r\n          setGenerationMessage(`✅ ${result.message}. Se generaron ${result.generatedCount} producciones para la decena ${result.decena}.`);\r\n          setGenerationType('success');\r\n          // Recargar producciones después de generar\r\n          fetch('/api/productions')\r\n            .then(res => res.json())\r\n            .then(data => setProducciones(data));\r\n        } else {\r\n          setGenerationMessage('');\r\n          setGenerationType(null);\r\n        }\r\n      } else {\r\n        const error = await response.json();\r\n        setGenerationMessage(`❌ Error: ${error.error || 'No se pudieron generar las producciones'}`);\r\n        setGenerationType('error');\r\n      }\r\n    } catch (error) {\r\n      setGenerationMessage(`❌ Error de conexión: ${error}`);\r\n      setGenerationType('error');\r\n    } finally {\r\n      setGeneratingProductions(false);\r\n    }\r\n  };\r\n\r\n  // Generar producciones automáticamente cuando se carga el componente\r\n  useEffect(() => {\r\n    if (trips.length > 0 && zones.length > 0 && routes.length > 0) {\r\n      generateProductions(decenaSeleccionada);\r\n    }\r\n  }, [trips.length, zones.length, routes.length, decenaSeleccionada]);\r\n\r\n  // Eliminar duplicados de fechaDesde y fechaHasta\r\n  // Ya no se usan useState para fechaDesde y fechaHasta, solo las derivadas de la decena\r\n  // const { desde: fechaDesde, hasta: fechaHasta } = getFechasDecena(decenaSeleccionada);\r\n\r\n  // Filtrar viajes por decena seleccionada\r\n  const { desde, hasta } = getFechasDecena(decenaSeleccionada);\r\n  const viajesParaCalcular = trips.filter(v => {\r\n    if (!v.travelDate) return false;\r\n    const fechaViaje = v.travelDate.slice(0, 10); // formato YYYY-MM-DD\r\n    return fechaViaje >= desde && fechaViaje <= hasta;\r\n  });\r\n\r\n  // DEBUG: Logs para depuración de filtro de fechas\r\n  if (trips.length > 0) {\r\n    const fueraDeRango = trips.filter(v => {\r\n      if (!v.travelDate) return false;\r\n      const fechaViaje = v.travelDate.slice(0, 10);\r\n      return !(fechaViaje >= desde && fechaViaje <= hasta);\r\n    });\r\n    // Solo mostrar si hay decena seleccionada\r\n    console.log('Decena seleccionada:', decenaSeleccionada, '| Rango:', desde, 'a', hasta);\r\n    console.log('Total viajes:', trips.length, '| Viajes en decena:', viajesParaCalcular.length, '| Fuera de rango:', fueraDeRango.length);\r\n    if (fueraDeRango.length > 0) {\r\n      console.log('Fechas fuera de rango:', fueraDeRango.map(v => v.travelDate));\r\n    }\r\n    // Mostrar fechas límite presentes\r\n    const fechasEnDecena = viajesParaCalcular\r\n      .filter(v => v.travelDate)\r\n      .map(v => v.travelDate!.slice(0, 10));\r\n    if (fechasEnDecena.includes(desde)) {\r\n      console.log('Incluye fecha de inicio:', desde);\r\n    } else {\r\n      console.warn('NO incluye fecha de inicio:', desde);\r\n    }\r\n    if (fechasEnDecena.includes(hasta)) {\r\n      console.log('Incluye fecha de fin:', hasta);\r\n    } else {\r\n      console.warn('NO incluye fecha de fin:', hasta);\r\n    }\r\n  }\r\n\r\n  // Validar que la fecha \"hasta\" sea mayor o igual que \"desde\"\r\n  const fechaValida = true; // Ya no se usa fechaDesde y fechaHasta directamente\r\n  const mensajeError = ''; // Ya no se usa fechaDesde y fechaHasta directamente\r\n\r\n  // Usar todos los viajes para calcular por defecto\r\n  // const viajesParaCalcular = trips; // This line is now redundant as viajesParaCalcular is defined above\r\n\r\n  // Buscar zona por origen/destino\r\n  const getZonaPorTramo = (origen: string, destino: string): Zone | null => {\r\n    const normOrigen = normalize(origen);\r\n    const normDestino = normalize(destino);\r\n    for (const route of routes) {\r\n      const rOrig = normalize(route.origen);\r\n      const rDest = normalize(route.destino);\r\n      // Comparar ambos sentidos, idéntico a backend\r\n      if (\r\n        (rOrig === normOrigen && rDest === normDestino) ||\r\n        (rOrig === normDestino && rDest === normOrigen)\r\n      ) {\r\n        return route.zona;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Agrupar viajes por empresa usando normalización igual que backend\r\n  const normalizarEmpresa = (nombre: string) => normalize(nombre);\r\n  const empresasNormalizadas = Array.from(new Set(viajesParaCalcular\r\n    .filter(v => v.companyName && v.companyName.trim() !== \"\")\r\n    .map(v => normalizarEmpresa(v.companyName!))));\r\n\r\n  // Mapear nombre normalizado a nombre original (para mostrar)\r\n  const mapEmpresaOriginal = new Map<string, string>();\r\n  viajesParaCalcular.forEach(v => {\r\n    if (v.companyName && v.companyName.trim() !== \"\") {\r\n      const norm = normalizarEmpresa(v.companyName);\r\n      if (!mapEmpresaOriginal.has(norm)) {\r\n        mapEmpresaOriginal.set(norm, v.companyName);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Calcular resumen por empresario (desde viajes)\r\n  const resumenCalculado = empresasNormalizadas.map(empNorm => {\r\n    const viajesEmp = viajesParaCalcular.filter(v => normalizarEmpresa(v.companyName!) === empNorm);\r\n    let totalServicios = 0;\r\n    let totalIngresos = 0;\r\n    let totalGanancia = 0;\r\n    let sinZona = 0;\r\n    let conZona = 0;\r\n    const viajesSinZona: any[] = [];\r\n    viajesEmp.forEach(v => {\r\n      const zona = getZonaPorTramo(v.origin, v.destination);\r\n      const porcentaje = zona ? zona.porcentaje : 0;\r\n      totalServicios++;\r\n      totalIngresos += v.totalIngresos;\r\n      if (zona) {\r\n        totalGanancia += v.totalIngresos * (porcentaje / 100);\r\n        conZona++;\r\n      } else {\r\n        sinZona++;\r\n        viajesSinZona.push({\r\n          origin: v.origin,\r\n          destination: v.destination,\r\n          companyName: v.companyName,\r\n          travelDate: v.travelDate\r\n        });\r\n      }\r\n    });\r\n    // LOG de depuración por empresa\r\n    if (viajesSinZona.length > 0) {\r\n      console.warn(`Viajes SIN zona para empresa ${mapEmpresaOriginal.get(empNorm) || empNorm}:`, viajesSinZona);\r\n    }\r\n    console.log(`Empresa: ${mapEmpresaOriginal.get(empNorm) || empNorm} | Total viajes: ${viajesEmp.length} | Con zona: ${conZona} | Sin zona: ${sinZona} | Ingresos: ${totalIngresos} | Ganancia calculada: ${totalGanancia}`);\r\n    return { emp: mapEmpresaOriginal.get(empNorm) || empNorm, totalServicios, totalIngresos, totalGanancia, conZona, sinZona };\r\n  });\r\n\r\n  // Obtener producciones guardadas en BD para la decena seleccionada\r\n  const produccionesFiltradas = producciones.filter(p => p.decena === decenaSeleccionada);\r\n  const gananciaTotalBD = produccionesFiltradas.reduce((acc, p) => acc + (p.total || 0), 0);\r\n\r\n  // Combinar datos calculados con datos guardados\r\n  const resumenCombinado = resumenCalculado.map(calc => {\r\n    const prodBD = produccionesFiltradas.find(p => p.entrepreneur?.nombre === calc.emp);\r\n    return {\r\n      ...calc,\r\n      gananciaBD: prodBD?.total || 0,\r\n      validado: prodBD?.validado || false,\r\n      comentarios: prodBD?.comentarios || ''\r\n    };\r\n  });\r\n\r\n  // Detalle por zona para un empresario\r\n  const getDetallePorZona = (empresario: string) => {\r\n    const viajesEmp = viajesParaCalcular.filter(v => v.companyName === empresario);\r\n    const zonasMap: { [zonaId: number]: { zona: Zone, servicios: number, ingresos: number, ganancia: number } } = {};\r\n    viajesEmp.forEach(v => {\r\n      const zona = getZonaPorTramo(v.origin, v.destination);\r\n      if (zona) {\r\n        if (!zonasMap[zona.id]) {\r\n          zonasMap[zona.id] = { zona, servicios: 0, ingresos: 0, ganancia: 0 };\r\n        }\r\n        zonasMap[zona.id].servicios++;\r\n        zonasMap[zona.id].ingresos += v.totalIngresos;\r\n        zonasMap[zona.id].ganancia += v.totalIngresos * (zona.porcentaje / 100);\r\n      }\r\n    });\r\n    return Object.values(zonasMap);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Producción por Empresario</h1>\r\n      \r\n      {/* Selector de decena */}\r\n      <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\r\n        <h3 className=\"text-lg font-semibold mb-3\">Ganancia por Decena</h3>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Seleccionar Decena:\r\n          </label>\r\n          <select\r\n            value={decenaSeleccionada}\r\n            onChange={(e) => setDecenaSeleccionada(e.target.value)}\r\n            className=\"border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            {generarOpcionesDecenas().map(decena => {\r\n                const decenaNum = decena.charAt(0);\r\n                const nombreMesAño = getNombreMesDecena(decena);\r\n                return (\r\n                  <option key={decena} value={decena}>\r\n                    {decenaNum}ª Decena {nombreMesAño}\r\n                  </option>\r\n                );\r\n              })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* El resto de la tabla y cálculos usan la decenaSeleccionada para filtrar producciones y mostrar la ganancia correspondiente */}\r\n      \r\n      {/* Indicador de carga */}\r\n      {loadingTrips && (\r\n        <div className=\"mb-4 p-4 rounded border bg-blue-100 text-blue-700 border-blue-300\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-700 mr-2\"></div>\r\n              {loadingProgress}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Mensaje de generación de producciones */}\r\n      {generationMessage && generationType === 'success' && (\r\n        <div className=\"mb-4 p-4 rounded border bg-green-100 text-green-700 border-green-300\">\r\n          {generationMessage}\r\n        </div>\r\n      )}\r\n      {generationMessage && generationType === 'error' && (\r\n        <div className=\"mb-4 p-4 rounded border bg-red-100 text-red-700 border-red-300\">\r\n          {generationMessage}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Resumen de ganancias limpio */}\r\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg flex flex-col md:flex-row md:justify-between md:items-center\">\r\n        <div>\r\n          <span className=\"text-sm text-gray-600\">Ganancia oficial (guardada en BD): </span>\r\n          <span className=\"text-lg font-bold text-green-700\" title=\"Este es el valor oficial que se paga\">\r\n            ${resumenCombinado.reduce((acc, r) => acc + r.gananciaBD, 0).toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-xs text-gray-500 mb-2\">* La ganancia mostrada es la oficial para pago. Si hay diferencias, revisa los datos de viajes, zonas y vuelve a generar producciones.</div>\r\n      <table className=\"min-w-full border divide-y divide-gray-200 text-sm mb-8\">\r\n        <thead className=\"bg-gray-100\">\r\n          <tr>\r\n            <th className=\"px-4 py-2 text-left\">Empresario</th>\r\n            <th className=\"px-4 py-2 text-left\">Servicios</th>\r\n            <th className=\"px-4 py-2 text-left\">Total Ingresos</th>\r\n            <th className=\"px-4 py-2 text-left\">Ganancia</th>\r\n            <th className=\"px-4 py-2 text-left\">Detalle</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {resumenCombinado.map(r => (\r\n            <tr key={r.emp} className=\"border-b\">\r\n              <td className=\"px-4 py-2 font-medium\">{r.emp}</td>\r\n              <td className=\"px-4 py-2\">{r.totalServicios}</td>\r\n              <td className=\"px-4 py-2\">${r.totalIngresos.toLocaleString()}</td>\r\n              <td className=\"px-4 py-2 text-green-700 font-bold\" title=\"Valor oficial para pago\">${r.gananciaBD.toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\r\n              <td className=\"px-4 py-2\">\r\n                <button\r\n                  className=\"bg-blue-600 text-white px-2 py-1 rounded\"\r\n                  onClick={() => setDetalleEmpresario(r.emp)}\r\n                >\r\n                  Ver detalle\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {detalleEmpresario && (\r\n        <div className=\"bg-white rounded shadow p-6 mb-8\">\r\n          <h2 className=\"text-lg font-bold mb-4\">Detalle de producción: {detalleEmpresario}</h2>\r\n          <button className=\"mb-4 text-blue-600 underline\" onClick={() => setDetalleEmpresario(null)}>\r\n            Volver al resumen\r\n          </button>\r\n          <table className=\"min-w-full border divide-y divide-gray-200 text-sm\">\r\n            <thead className=\"bg-gray-100\">\r\n              <tr>\r\n                <th className=\"px-4 py-2 text-left\">Zona</th>\r\n                <th className=\"px-4 py-2 text-left\">% Zona</th>\r\n                <th className=\"px-4 py-2 text-left\">Servicios</th>\r\n                <th className=\"px-4 py-2 text-left\">Ingresos</th>\r\n                <th className=\"px-4 py-2 text-left\">Ganancia</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {getDetallePorZona(detalleEmpresario).map(z => (\r\n                <tr key={z.zona.id}>\r\n                  <td className=\"px-4 py-2\">{z.zona.nombre}</td>\r\n                  <td className=\"px-4 py-2\">{z.zona.porcentaje}%</td>\r\n                  <td className=\"px-4 py-2\">{z.servicios}</td>\r\n                  <td className=\"px-4 py-2\">${z.ingresos.toLocaleString()}</td>\r\n                  <td className=\"px-4 py-2\">${z.ganancia.toLocaleString(undefined, { maximumFractionDigits: 2 })}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalculoProduccion; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}