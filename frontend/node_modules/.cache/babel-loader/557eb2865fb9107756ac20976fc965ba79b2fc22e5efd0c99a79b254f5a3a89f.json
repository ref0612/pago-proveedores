{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pasaj\\\\Desktop\\\\pullman-payment-system\\\\frontend\\\\src\\\\modules\\\\Recorridos\\\\RegistroRecorridos.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport Modal from 'react-modal';\nimport * as XLSX from 'xlsx';\n\n// Lista exhaustiva de ciudades de Chile (puedes expandirla)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ciudadesChile = [{\n  value: 'Concón',\n  label: 'Concón'\n}, {\n  value: 'El Tabo',\n  label: 'El Tabo'\n}, {\n  value: 'Laguna Verde',\n  label: 'Laguna Verde'\n}, {\n  value: 'Limache',\n  label: 'Limache'\n}, {\n  value: 'Los Andes',\n  label: 'Los Andes'\n}, {\n  value: 'San Antonio',\n  label: 'San Antonio'\n}, {\n  value: 'San Felipe',\n  label: 'San Felipe'\n}, {\n  value: 'Santiago',\n  label: 'Santiago'\n}, {\n  value: 'Santo Domingo',\n  label: 'Santo Domingo'\n}, {\n  value: 'Valparaiso',\n  label: 'Valparaiso'\n}, {\n  value: 'Villa Alemana',\n  label: 'Villa Alemana'\n}, {\n  value: 'Viña Del Mar',\n  label: 'Viña Del Mar'\n}];\nconst RegistroRecorridos = () => {\n  _s();\n  const [zones, setZones] = useState([]);\n  const [nombre, setNombre] = useState('');\n  const [porcentaje, setPorcentaje] = useState(0);\n  const [editId, setEditId] = useState(null);\n  const [successMsg, setSuccessMsg] = useState('');\n\n  // Modal\n  const [modalOpen, setModalOpen] = useState(false);\n  // Formulario zona\n  const [nombreZona, setNombreZona] = useState('');\n  const [porcentajeZona, setPorcentajeZona] = useState(0);\n  // Tramos dinámicos\n  const [tramos, setTramos] = useState([{\n    origen: null,\n    destino: null,\n    kilometraje: 0\n  }]);\n\n  // Estado para edición de zona\n  const [editZone, setEditZone] = useState(null);\n  // Estado para edición de tramo\n  const [editTramo, setEditTramo] = useState(null);\n\n  // Cargar zonas al montar\n  useEffect(() => {\n    fetch('/api/zones').then(res => res.json()).then(data => setZones(data)).catch(err => console.error('Error cargando zonas:', err));\n  }, []);\n\n  // Modal config\n  useEffect(() => {\n    Modal.setAppElement('#root');\n  }, []);\n\n  // Handlers tramos\n  const handleTramoChange = (idx, field, value) => {\n    setTramos(tramos => tramos.map((t, i) => i === idx ? {\n      ...t,\n      [field]: value\n    } : t));\n  };\n  const handleAddTramo = () => {\n    setTramos([...tramos, {\n      origen: null,\n      destino: null,\n      kilometraje: 0\n    }]);\n  };\n  const handleRemoveTramo = idx => {\n    if (tramos.length === 1) return;\n    setTramos(tramos => tramos.filter((_, i) => i !== idx));\n  };\n\n  // Crear o editar zona\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!nombre || porcentaje <= 0) return;\n    const zona = {\n      nombre,\n      porcentaje\n    };\n    if (editId) {\n      // Editar\n      const res = await fetch(`/api/zones/${editId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(zona)\n      });\n      if (res.ok) {\n        const zonaEditada = await res.json();\n        setZones(zones.map(z => z.id === editId ? zonaEditada : z));\n        setEditId(null);\n        setNombre('');\n        setPorcentaje(0);\n      }\n    } else {\n      // Crear\n      const res = await fetch('/api/zones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(zona)\n      });\n      if (res.ok) {\n        const zonaCreada = await res.json();\n        setZones([...zones, zonaCreada]);\n        setNombre('');\n        setPorcentaje(0);\n      }\n    }\n  };\n\n  // Eliminar zona\n  const handleDelete = async id => {\n    if (!id) return;\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona?')) return;\n    const res = await fetch(`/api/zones/${id}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      setZones(zones.filter(z => z.id !== id));\n    }\n  };\n\n  // Editar zona (cargar en formulario)\n  const handleEdit = zone => {\n    setEditId(zone.id);\n    setNombre(zone.nombre);\n    setPorcentaje(zone.porcentaje);\n  };\n\n  // Cancelar edición\n  const handleCancelEdit = () => {\n    setEditId(null);\n    setNombre('');\n    setPorcentaje(0);\n  };\n\n  // Abrir modal para editar zona\n  const handleEditZone = zone => {\n    setEditZone(zone);\n    setNombreZona(zone.nombre);\n    setPorcentajeZona(zone.porcentaje);\n    // Mostrar los tramos asociados en el modal (solo visualización)\n    const tramosZona = routesByZone[zone.id] || [];\n    setTramos(tramosZona.map(t => ({\n      origen: ciudadesChile.find(c => c.value === t.origen) || {\n        value: t.origen,\n        label: t.origen\n      },\n      destino: ciudadesChile.find(c => c.value === t.destino) || {\n        value: t.destino,\n        label: t.destino\n      },\n      kilometraje: t.kilometraje\n    })));\n    setModalOpen(true);\n  };\n\n  // Guardar edición de zona (ahora permite CRUD de tramos)\n  const handleSubmitModal = async e => {\n    e.preventDefault();\n    try {\n      let zonaCreada = editZone;\n      // 1. Actualizar zona (nombre, porcentaje)\n      if (editZone) {\n        const zonaRes = await fetch(`/api/zones/${editZone.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nombre: nombreZona,\n            porcentaje: porcentajeZona\n          })\n        });\n        if (!zonaRes.ok) throw new Error('Error actualizando zona');\n        zonaCreada = await zonaRes.json();\n      } else {\n        // Crear zona nueva\n        const zonaRes = await fetch('/api/zones', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nombre: nombreZona,\n            porcentaje: porcentajeZona\n          })\n        });\n        if (!zonaRes.ok) throw new Error('Error creando zona');\n        zonaCreada = await zonaRes.json();\n      }\n      // 2. Obtener tramos actuales en backend (solo si es edición)\n      let tramosBackend = [];\n      if (editZone) {\n        const routesRes = await fetch('/api/routes');\n        const allRoutes = await routesRes.json();\n        tramosBackend = allRoutes.filter(r => r.zona && r.zona.id === editZone.id);\n      }\n      // 3. Determinar tramos a crear y a eliminar\n      const tramosValidos = tramos.filter(t => t.origen && t.destino && t.kilometraje > 0);\n      // Tramos a crear: los que no existen en backend\n      const tramosToCreate = tramosValidos.filter(t => !tramosBackend.some(tb => {\n        var _t$origen, _t$destino;\n        return tb.origen === ((_t$origen = t.origen) === null || _t$origen === void 0 ? void 0 : _t$origen.value) && tb.destino === ((_t$destino = t.destino) === null || _t$destino === void 0 ? void 0 : _t$destino.value);\n      }));\n      // Tramos a eliminar: los que están en backend pero no en el array actual\n      const tramosToDelete = tramosBackend.filter(tb => !tramosValidos.some(t => {\n        var _t$origen2, _t$destino2;\n        return ((_t$origen2 = t.origen) === null || _t$origen2 === void 0 ? void 0 : _t$origen2.value) === tb.origen && ((_t$destino2 = t.destino) === null || _t$destino2 === void 0 ? void 0 : _t$destino2.value) === tb.destino;\n      }));\n      // 4. Crear tramos nuevos\n      await Promise.all(tramosToCreate.map(tramo => {\n        var _tramo$origen, _tramo$destino;\n        return fetch('/api/routes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            origen: (_tramo$origen = tramo.origen) === null || _tramo$origen === void 0 ? void 0 : _tramo$origen.value,\n            destino: (_tramo$destino = tramo.destino) === null || _tramo$destino === void 0 ? void 0 : _tramo$destino.value,\n            kilometraje: tramo.kilometraje,\n            zona: zonaCreada\n          })\n        });\n      }));\n      // 5. Eliminar tramos quitados\n      await Promise.all(tramosToDelete.map(tb => fetch(`/api/routes/${tb.id}`, {\n        method: 'DELETE'\n      })));\n      // 6. Actualizar listado de zonas\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\n      setZones(zonasActualizadas);\n      setModalOpen(false);\n      setEditZone(null);\n      setNombreZona('');\n      setPorcentajeZona(0);\n      setTramos([{\n        origen: null,\n        destino: null,\n        kilometraje: 0\n      }]);\n      setSuccessMsg(editZone ? 'Zona y tramos actualizados correctamente' : 'Zona y tramos guardados correctamente');\n      setTimeout(() => setSuccessMsg(''), 2500);\n    } catch (err) {\n      alert('Error guardando zona y tramos: ' + err.message);\n    }\n  };\n\n  // Mostrar tramos asociados a cada zona\n  const [routesByZone, setRoutesByZone] = useState({});\n  useEffect(() => {\n    // Cargar tramos para cada zona\n    const fetchRoutes = async () => {\n      const routesRes = await fetch('/api/routes');\n      const allRoutes = await routesRes.json();\n      const grouped = {};\n      allRoutes.forEach(route => {\n        if (route.zona && route.zona.id) {\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\n          grouped[route.zona.id].push(route);\n        }\n      });\n      setRoutesByZone(grouped);\n    };\n    fetchRoutes();\n  }, [zones]);\n\n  // Eliminar zona y sus tramos asociados\n  const handleDeleteZone = async id => {\n    if (!id) return;\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona y todos sus tramos asociados?')) return;\n    // Eliminar tramos asociados primero\n    const tramos = routesByZone[id] || [];\n    await Promise.all(tramos.map(tramo => fetch(`/api/routes/${tramo.id}`, {\n      method: 'DELETE'\n    })));\n    // Eliminar zona\n    const res = await fetch(`/api/zones/${id}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\n      setZones(zonasActualizadas);\n      setSuccessMsg('Zona eliminada correctamente');\n      setTimeout(() => setSuccessMsg(''), 2500);\n    }\n  };\n\n  // Eliminar tramo individual\n  const handleDeleteTramo = async (tramoId, zoneId) => {\n    if (!window.confirm('¿Seguro que deseas eliminar este tramo?')) return;\n    const res = await fetch(`/api/routes/${tramoId}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      // Actualizar tramos de la zona\n      const routesRes = await fetch('/api/routes');\n      const allRoutes = await routesRes.json();\n      const grouped = {};\n      allRoutes.forEach(route => {\n        if (route.zona && route.zona.id) {\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\n          grouped[route.zona.id].push(route);\n        }\n      });\n      setRoutesByZone(grouped);\n      setSuccessMsg('Tramo eliminado correctamente');\n      setTimeout(() => setSuccessMsg(''), 2500);\n    }\n  };\n\n  // Eliminar el modal y lógica de edición de tramo individual\n\n  // Carga masiva desde Excel/CSV\n  const handleBulkUpload = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async evt => {\n      var _evt$target;\n      const data = (_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.result;\n      if (!data) return;\n      const workbook = XLSX.read(data, {\n        type: 'binary'\n      });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const rows = XLSX.utils.sheet_to_json(sheet, {\n        header: 1\n      });\n      // Buscar encabezado\n      const header = rows[0].map(h => h.trim().toLowerCase());\n      const idxNombre = header.indexOf('nombre');\n      const idxOrigen = header.indexOf('origen');\n      const idxDestino = header.indexOf('destino');\n      const idxKm = header.indexOf('km');\n      const idxPorcentaje = header.indexOf('porcentaje');\n      if (idxNombre === -1 || idxOrigen === -1 || idxDestino === -1 || idxKm === -1 || idxPorcentaje === -1) {\n        alert('El archivo debe tener los encabezados: Nombre | Origen | Destino | KM | Porcentaje');\n        return;\n      }\n      // Procesar filas\n      for (let i = 1; i < rows.length; i++) {\n        const row = rows[i];\n        if (!row[idxNombre] || !row[idxOrigen] || !row[idxDestino] || !row[idxKm] || !row[idxPorcentaje]) continue;\n        const nombre = String(row[idxNombre]).trim();\n        const origen = String(row[idxOrigen]).trim();\n        const destino = String(row[idxDestino]).trim();\n        const km = Number(row[idxKm]);\n        const porcentaje = Number(row[idxPorcentaje]);\n        // Buscar o crear zona\n        let zona = zones.find(z => z.nombre === nombre);\n        if (!zona) {\n          const res = await fetch('/api/zones', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              nombre,\n              porcentaje\n            })\n          });\n          if (!res.ok) continue;\n          zona = await res.json();\n        }\n        // Crear tramo\n        await fetch('/api/routes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            origen,\n            destino,\n            kilometraje: km,\n            zona\n          })\n        });\n      }\n      // Refrescar zonas\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\n      setZones(zonasActualizadas);\n      setSuccessMsg('Carga masiva completada');\n      setTimeout(() => setSuccessMsg(''), 2500);\n    };\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Manejo de Zonas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-6 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        onClick: () => setModalOpen(true),\n        children: \"Crear zona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\",\n        children: [\"Carga masiva (Excel)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.csv\",\n          onChange: handleBulkUpload,\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onRequestClose: () => {\n        setModalOpen(false);\n        setEditZone(null);\n      },\n      contentLabel: editZone ? \"Editar Zona\" : \"Crear Zona\",\n      className: \"bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto mt-20 outline-none\",\n      overlayClassName: \"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: editZone ? \"Editar Zona\" : \"Crear Zona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitModal,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-1\",\n            children: \"Nombre de la zona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nombreZona,\n            onChange: e => setNombreZona(e.target.value),\n            className: \"border px-2 py-1 rounded w-full\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-1\",\n            children: \"% de comisi\\xF3n de la zona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: porcentajeZona,\n            onChange: e => setPorcentajeZona(Number(e.target.value.replace(/[^\\d.]/g, ''))),\n            className: \"border px-2 py-1 rounded w-full\",\n            inputMode: \"decimal\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), editZone && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Tramos configurados en la zona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), tramos.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"border w-full text-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-2 py-1\",\n                  children: \"Origen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-2 py-1\",\n                  children: \"Destino\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-2 py-1\",\n                  children: \"Km\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tramos.map((t, i) => {\n                var _t$origen$label, _t$origen3, _t$destino$label, _t$destino3;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1\",\n                    children: (_t$origen$label = (_t$origen3 = t.origen) === null || _t$origen3 === void 0 ? void 0 : _t$origen3.label) !== null && _t$origen$label !== void 0 ? _t$origen$label : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1\",\n                    children: (_t$destino$label = (_t$destino3 = t.destino) === null || _t$destino3 === void 0 ? void 0 : _t$destino3.label) !== null && _t$destino$label !== void 0 ? _t$destino$label : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 py-1\",\n                    children: t.kilometraje\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: \"Sin tramos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Tramos de la zona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), tramos.map((tramo, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: \"Origen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-40\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: ciudadesChile,\n                value: tramo.origen,\n                onChange: opt => handleTramoChange(idx, 'origen', opt),\n                placeholder: \"Buscar ciudad...\",\n                isSearchable: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: \"Destino\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-40\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: ciudadesChile,\n                value: tramo.destino,\n                onChange: opt => handleTramoChange(idx, 'destino', opt),\n                placeholder: \"Buscar ciudad...\",\n                isSearchable: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"border px-2 py-1 rounded w-24\",\n              placeholder: \"Km\",\n              value: tramo.kilometraje,\n              min: 0,\n              onChange: e => handleTramoChange(idx, 'kilometraje', Number(e.target.value)),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleAddTramo,\n              className: \"text-green-600 text-xl font-bold\",\n              children: \"\\uFF0B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleRemoveTramo(idx),\n              className: \"text-red-500 text-xl font-bold\",\n              children: \"\\uFF0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalOpen(false),\n            className: \"bg-gray-400 text-white px-4 py-2 rounded\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n            children: \"Guardar zona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), successMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 text-green-800 px-4 py-2 rounded mb-4 text-center font-semibold\",\n      children: successMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full border divide-y divide-gray-200 text-sm mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Porcentaje (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Tramos asociados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: zones.map(zone => {\n          var _routesByZone$zone$id;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b align-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 font-medium\",\n              children: zone.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: zone.porcentaje\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: (_routesByZone$zone$id = routesByZone[zone.id]) !== null && _routesByZone$zone$id !== void 0 && _routesByZone$zone$id.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"border w-full text-xs\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Origen\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Destino\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Km\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: routesByZone[zone.id].map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: r.origen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: r.destino\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: r.kilometraje\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 27\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-400\",\n                children: \"Sin tramos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-yellow-500 text-white px-2 py-1 rounded mr-2\",\n                onClick: () => handleEditZone(zone),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-red-500 text-white px-2 py-1 rounded\",\n                onClick: () => handleDeleteZone(zone.id),\n                children: \"Eliminar zona\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)]\n          }, zone.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistroRecorridos, \"VJlsbZeihKI/N/LVacNfsEGHHqc=\");\n_c = RegistroRecorridos;\nexport default RegistroRecorridos;\nvar _c;\n$RefreshReg$(_c, \"RegistroRecorridos\");","map":{"version":3,"names":["React","useState","useEffect","Select","Modal","XLSX","jsxDEV","_jsxDEV","ciudadesChile","value","label","RegistroRecorridos","_s","zones","setZones","nombre","setNombre","porcentaje","setPorcentaje","editId","setEditId","successMsg","setSuccessMsg","modalOpen","setModalOpen","nombreZona","setNombreZona","porcentajeZona","setPorcentajeZona","tramos","setTramos","origen","destino","kilometraje","editZone","setEditZone","editTramo","setEditTramo","fetch","then","res","json","data","catch","err","console","error","setAppElement","handleTramoChange","idx","field","map","t","i","handleAddTramo","handleRemoveTramo","length","filter","_","handleSubmit","e","preventDefault","zona","method","headers","body","JSON","stringify","ok","zonaEditada","z","id","zonaCreada","handleDelete","window","confirm","handleEdit","zone","handleCancelEdit","handleEditZone","tramosZona","routesByZone","find","c","handleSubmitModal","zonaRes","Error","tramosBackend","routesRes","allRoutes","r","tramosValidos","tramosToCreate","some","tb","_t$origen","_t$destino","tramosToDelete","_t$origen2","_t$destino2","Promise","all","tramo","_tramo$origen","_tramo$destino","zonasActualizadas","setTimeout","alert","message","setRoutesByZone","fetchRoutes","grouped","forEach","route","push","handleDeleteZone","handleDeleteTramo","tramoId","zoneId","handleBulkUpload","_e$target$files","file","target","files","reader","FileReader","onload","evt","_evt$target","result","workbook","read","type","sheet","Sheets","SheetNames","rows","utils","sheet_to_json","header","h","trim","toLowerCase","idxNombre","indexOf","idxOrigen","idxDestino","idxKm","idxPorcentaje","row","String","km","Number","readAsBinaryString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","onChange","isOpen","onRequestClose","contentLabel","overlayClassName","onSubmit","required","replace","inputMode","_t$origen$label","_t$origen3","_t$destino$label","_t$destino3","options","opt","placeholder","isSearchable","min","_routesByZone$zone$id","_c","$RefreshReg$"],"sources":["C:/Users/pasaj/Desktop/pullman-payment-system/frontend/src/modules/Recorridos/RegistroRecorridos.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport Modal from 'react-modal';\r\nimport { SingleValue } from 'react-select';\r\nimport * as XLSX from 'xlsx';\r\n\r\n// Lista exhaustiva de ciudades de Chile (puedes expandirla)\r\nconst ciudadesChile = [\r\n  { value: 'Concón', label: 'Concón' },\r\n  { value: 'El Tabo', label: 'El Tabo' },\r\n  { value: 'Laguna Verde', label: 'Laguna Verde' },\r\n  { value: 'Limache', label: 'Limache' },\r\n  { value: 'Los Andes', label: 'Los Andes' },\r\n  { value: 'San Antonio', label: 'San Antonio' },\r\n  { value: 'San Felipe', label: 'San Felipe' },\r\n  { value: 'Santiago', label: 'Santiago' },\r\n  { value: 'Santo Domingo', label: 'Santo Domingo' },\r\n  { value: 'Valparaiso', label: 'Valparaiso' },\r\n  { value: 'Villa Alemana', label: 'Villa Alemana' },\r\n  { value: 'Viña Del Mar', label: 'Viña Del Mar' },\r\n];\r\n\r\ninterface Tramo {\r\n  origen: { value: string; label: string } | null;\r\n  destino: { value: string; label: string } | null;\r\n  kilometraje: number;\r\n}\r\n\r\nconst RegistroRecorridos: React.FC = () => {\r\n  const [zones, setZones] = useState<any[]>([]);\r\n  const [nombre, setNombre] = useState('');\r\n  const [porcentaje, setPorcentaje] = useState<number>(0);\r\n  const [editId, setEditId] = useState<number | null>(null);\r\n  const [successMsg, setSuccessMsg] = useState('');\r\n\r\n  // Modal\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  // Formulario zona\r\n  const [nombreZona, setNombreZona] = useState('');\r\n  const [porcentajeZona, setPorcentajeZona] = useState<number>(0);\r\n  // Tramos dinámicos\r\n  const [tramos, setTramos] = useState<Tramo[]>([\r\n    { origen: null, destino: null, kilometraje: 0 },\r\n  ]);\r\n\r\n  // Estado para edición de zona\r\n  const [editZone, setEditZone] = useState<any | null>(null);\r\n  // Estado para edición de tramo\r\n  const [editTramo, setEditTramo] = useState<{ tramo: any, zoneId: number } | null>(null);\r\n\r\n  // Cargar zonas al montar\r\n  useEffect(() => {\r\n    fetch('/api/zones')\r\n      .then(res => res.json())\r\n      .then(data => setZones(data))\r\n      .catch(err => console.error('Error cargando zonas:', err));\r\n  }, []);\r\n\r\n  // Modal config\r\n  useEffect(() => {\r\n    Modal.setAppElement('#root');\r\n  }, []);\r\n\r\n  // Handlers tramos\r\n  const handleTramoChange = (idx: number, field: keyof Tramo, value: any) => {\r\n    setTramos(tramos =>\r\n      tramos.map((t, i) =>\r\n        i === idx ? { ...t, [field]: value } : t\r\n      )\r\n    );\r\n  };\r\n  const handleAddTramo = () => {\r\n    setTramos([...tramos, { origen: null, destino: null, kilometraje: 0 }]);\r\n  };\r\n  const handleRemoveTramo = (idx: number) => {\r\n    if (tramos.length === 1) return;\r\n    setTramos(tramos => tramos.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  // Crear o editar zona\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!nombre || porcentaje <= 0) return;\r\n    const zona = { nombre, porcentaje };\r\n    if (editId) {\r\n      // Editar\r\n      const res = await fetch(`/api/zones/${editId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(zona),\r\n      });\r\n      if (res.ok) {\r\n        const zonaEditada = await res.json();\r\n        setZones(zones.map(z => (z.id === editId ? zonaEditada : z)));\r\n        setEditId(null);\r\n        setNombre('');\r\n        setPorcentaje(0);\r\n      }\r\n    } else {\r\n      // Crear\r\n      const res = await fetch('/api/zones', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(zona),\r\n      });\r\n      if (res.ok) {\r\n        const zonaCreada = await res.json();\r\n        setZones([...zones, zonaCreada]);\r\n        setNombre('');\r\n        setPorcentaje(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Eliminar zona\r\n  const handleDelete = async (id?: number) => {\r\n    if (!id) return;\r\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona?')) return;\r\n    const res = await fetch(`/api/zones/${id}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      setZones(zones.filter(z => z.id !== id));\r\n    }\r\n  };\r\n\r\n  // Editar zona (cargar en formulario)\r\n  const handleEdit = (zone: any) => {\r\n    setEditId(zone.id!);\r\n    setNombre(zone.nombre);\r\n    setPorcentaje(zone.porcentaje);\r\n  };\r\n\r\n  // Cancelar edición\r\n  const handleCancelEdit = () => {\r\n    setEditId(null);\r\n    setNombre('');\r\n    setPorcentaje(0);\r\n  };\r\n\r\n  // Abrir modal para editar zona\r\n  const handleEditZone = (zone: any) => {\r\n    setEditZone(zone);\r\n    setNombreZona(zone.nombre);\r\n    setPorcentajeZona(zone.porcentaje);\r\n    // Mostrar los tramos asociados en el modal (solo visualización)\r\n    const tramosZona = routesByZone[zone.id] || [];\r\n    setTramos(tramosZona.map((t: any) => ({\r\n      origen: ciudadesChile.find(c => c.value === t.origen) || { value: t.origen, label: t.origen },\r\n      destino: ciudadesChile.find(c => c.value === t.destino) || { value: t.destino, label: t.destino },\r\n      kilometraje: t.kilometraje\r\n    })));\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Guardar edición de zona (ahora permite CRUD de tramos)\r\n  const handleSubmitModal = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      let zonaCreada = editZone;\r\n      // 1. Actualizar zona (nombre, porcentaje)\r\n      if (editZone) {\r\n        const zonaRes = await fetch(`/api/zones/${editZone.id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ nombre: nombreZona, porcentaje: porcentajeZona }),\r\n        });\r\n        if (!zonaRes.ok) throw new Error('Error actualizando zona');\r\n        zonaCreada = await zonaRes.json();\r\n      } else {\r\n        // Crear zona nueva\r\n        const zonaRes = await fetch('/api/zones', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ nombre: nombreZona, porcentaje: porcentajeZona }),\r\n        });\r\n        if (!zonaRes.ok) throw new Error('Error creando zona');\r\n        zonaCreada = await zonaRes.json();\r\n      }\r\n      // 2. Obtener tramos actuales en backend (solo si es edición)\r\n      let tramosBackend: any[] = [];\r\n      if (editZone) {\r\n        const routesRes = await fetch('/api/routes');\r\n        const allRoutes = await routesRes.json();\r\n        tramosBackend = allRoutes.filter((r: any) => r.zona && r.zona.id === editZone.id);\r\n      }\r\n      // 3. Determinar tramos a crear y a eliminar\r\n      const tramosValidos = tramos.filter(t => t.origen && t.destino && t.kilometraje > 0);\r\n      // Tramos a crear: los que no existen en backend\r\n      const tramosToCreate = tramosValidos.filter(t =>\r\n        !tramosBackend.some(tb => tb.origen === t.origen?.value && tb.destino === t.destino?.value)\r\n      );\r\n      // Tramos a eliminar: los que están en backend pero no en el array actual\r\n      const tramosToDelete = tramosBackend.filter(tb =>\r\n        !tramosValidos.some(t => t.origen?.value === tb.origen && t.destino?.value === tb.destino)\r\n      );\r\n      // 4. Crear tramos nuevos\r\n      await Promise.all(\r\n        tramosToCreate.map(tramo =>\r\n          fetch('/api/routes', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              origen: tramo.origen?.value,\r\n              destino: tramo.destino?.value,\r\n              kilometraje: tramo.kilometraje,\r\n              zona: zonaCreada,\r\n            }),\r\n          })\r\n        )\r\n      );\r\n      // 5. Eliminar tramos quitados\r\n      await Promise.all(\r\n        tramosToDelete.map(tb =>\r\n          fetch(`/api/routes/${tb.id}`, { method: 'DELETE' })\r\n        )\r\n      );\r\n      // 6. Actualizar listado de zonas\r\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\r\n      setZones(zonasActualizadas);\r\n      setModalOpen(false);\r\n      setEditZone(null);\r\n      setNombreZona('');\r\n      setPorcentajeZona(0);\r\n      setTramos([{ origen: null, destino: null, kilometraje: 0 }]);\r\n      setSuccessMsg(editZone ? 'Zona y tramos actualizados correctamente' : 'Zona y tramos guardados correctamente');\r\n      setTimeout(() => setSuccessMsg(''), 2500);\r\n    } catch (err) {\r\n      alert('Error guardando zona y tramos: ' + (err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Mostrar tramos asociados a cada zona\r\n  const [routesByZone, setRoutesByZone] = useState<{ [zoneId: number]: any[] }>({});\r\n  useEffect(() => {\r\n    // Cargar tramos para cada zona\r\n    const fetchRoutes = async () => {\r\n      const routesRes = await fetch('/api/routes');\r\n      const allRoutes = await routesRes.json();\r\n      const grouped: { [zoneId: number]: any[] } = {};\r\n      allRoutes.forEach((route: any) => {\r\n        if (route.zona && route.zona.id) {\r\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\r\n          grouped[route.zona.id].push(route);\r\n        }\r\n      });\r\n      setRoutesByZone(grouped);\r\n    };\r\n    fetchRoutes();\r\n  }, [zones]);\r\n\r\n  // Eliminar zona y sus tramos asociados\r\n  const handleDeleteZone = async (id?: number) => {\r\n    if (!id) return;\r\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona y todos sus tramos asociados?')) return;\r\n    // Eliminar tramos asociados primero\r\n    const tramos = routesByZone[id] || [];\r\n    await Promise.all(tramos.map(tramo => fetch(`/api/routes/${tramo.id}`, { method: 'DELETE' })));\r\n    // Eliminar zona\r\n    const res = await fetch(`/api/zones/${id}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\r\n      setZones(zonasActualizadas);\r\n      setSuccessMsg('Zona eliminada correctamente');\r\n      setTimeout(() => setSuccessMsg(''), 2500);\r\n    }\r\n  };\r\n\r\n  // Eliminar tramo individual\r\n  const handleDeleteTramo = async (tramoId: number, zoneId: number) => {\r\n    if (!window.confirm('¿Seguro que deseas eliminar este tramo?')) return;\r\n    const res = await fetch(`/api/routes/${tramoId}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      // Actualizar tramos de la zona\r\n      const routesRes = await fetch('/api/routes');\r\n      const allRoutes = await routesRes.json();\r\n      const grouped: { [zoneId: number]: any[] } = {};\r\n      allRoutes.forEach((route: any) => {\r\n        if (route.zona && route.zona.id) {\r\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\r\n          grouped[route.zona.id].push(route);\r\n        }\r\n      });\r\n      setRoutesByZone(grouped);\r\n      setSuccessMsg('Tramo eliminado correctamente');\r\n      setTimeout(() => setSuccessMsg(''), 2500);\r\n    }\r\n  };\r\n\r\n  // Eliminar el modal y lógica de edición de tramo individual\r\n\r\n  // Carga masiva desde Excel/CSV\r\n  const handleBulkUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = async (evt) => {\r\n      const data = evt.target?.result;\r\n      if (!data) return;\r\n      const workbook = XLSX.read(data, { type: 'binary' });\r\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const rows: any[] = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n      // Buscar encabezado\r\n      const header = rows[0].map((h: string) => h.trim().toLowerCase());\r\n      const idxNombre = header.indexOf('nombre');\r\n      const idxOrigen = header.indexOf('origen');\r\n      const idxDestino = header.indexOf('destino');\r\n      const idxKm = header.indexOf('km');\r\n      const idxPorcentaje = header.indexOf('porcentaje');\r\n      if (idxNombre === -1 || idxOrigen === -1 || idxDestino === -1 || idxKm === -1 || idxPorcentaje === -1) {\r\n        alert('El archivo debe tener los encabezados: Nombre | Origen | Destino | KM | Porcentaje');\r\n        return;\r\n      }\r\n      // Procesar filas\r\n      for (let i = 1; i < rows.length; i++) {\r\n        const row = rows[i];\r\n        if (!row[idxNombre] || !row[idxOrigen] || !row[idxDestino] || !row[idxKm] || !row[idxPorcentaje]) continue;\r\n        const nombre = String(row[idxNombre]).trim();\r\n        const origen = String(row[idxOrigen]).trim();\r\n        const destino = String(row[idxDestino]).trim();\r\n        const km = Number(row[idxKm]);\r\n        const porcentaje = Number(row[idxPorcentaje]);\r\n        // Buscar o crear zona\r\n        let zona = zones.find(z => z.nombre === nombre);\r\n        if (!zona) {\r\n          const res = await fetch('/api/zones', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ nombre, porcentaje }),\r\n          });\r\n          if (!res.ok) continue;\r\n          zona = await res.json();\r\n        }\r\n        // Crear tramo\r\n        await fetch('/api/routes', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            origen,\r\n            destino,\r\n            kilometraje: km,\r\n            zona,\r\n          }),\r\n        });\r\n      }\r\n      // Refrescar zonas\r\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\r\n      setZones(zonasActualizadas);\r\n      setSuccessMsg('Carga masiva completada');\r\n      setTimeout(() => setSuccessMsg(''), 2500);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Manejo de Zonas</h1>\r\n      <div className=\"flex gap-4 mb-6 items-center\">\r\n        <button\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n          onClick={() => setModalOpen(true)}\r\n        >\r\n          Crear zona\r\n        </button>\r\n        <label className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\">\r\n          Carga masiva (Excel)\r\n          <input\r\n            type=\"file\"\r\n            accept=\".xlsx,.csv\"\r\n            onChange={handleBulkUpload}\r\n            className=\"hidden\"\r\n          />\r\n        </label>\r\n      </div>\r\n      {/* Modal para crear/editar zona */}\r\n      <Modal\r\n        isOpen={modalOpen}\r\n        onRequestClose={() => { setModalOpen(false); setEditZone(null); }}\r\n        contentLabel={editZone ? \"Editar Zona\" : \"Crear Zona\"}\r\n        className=\"bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto mt-20 outline-none\"\r\n        overlayClassName=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center\"\r\n      >\r\n        <h2 className=\"text-xl font-bold mb-4\">{editZone ? \"Editar Zona\" : \"Crear Zona\"}</h2>\r\n        <form onSubmit={handleSubmitModal}>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-1\">Nombre de la zona</label>\r\n            <input\r\n              type=\"text\"\r\n              value={nombreZona}\r\n              onChange={e => setNombreZona(e.target.value)}\r\n              className=\"border px-2 py-1 rounded w-full\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-1\">% de comisión de la zona</label>\r\n            <input\r\n              type=\"text\"\r\n              value={porcentajeZona}\r\n              onChange={e => setPorcentajeZona(Number(e.target.value.replace(/[^\\d.]/g, '')))}\r\n              className=\"border px-2 py-1 rounded w-full\"\r\n              inputMode=\"decimal\"\r\n              required\r\n            />\r\n          </div>\r\n          {editZone && (\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-2\">Tramos configurados en la zona</label>\r\n              {tramos.length ? (\r\n                <table className=\"border w-full text-xs\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"px-2 py-1\">Origen</th>\r\n                      <th className=\"px-2 py-1\">Destino</th>\r\n                      <th className=\"px-2 py-1\">Km</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {tramos.map((t, i) => (\r\n                      <tr key={i}>\r\n                        <td className=\"px-2 py-1\">{t.origen?.label ?? ''}</td>\r\n                        <td className=\"px-2 py-1\">{t.destino?.label ?? ''}</td>\r\n                        <td className=\"px-2 py-1\">{t.kilometraje}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              ) : (\r\n                <span className=\"text-gray-400\">Sin tramos</span>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium mb-2\">Tramos de la zona</label>\r\n            {tramos.map((tramo, idx) => (\r\n              <div key={idx} className=\"flex items-center gap-2 mb-2\">\r\n                <span className=\"text-sm\">Origen</span>\r\n                <div className=\"w-40\">\r\n                  <Select\r\n                    options={ciudadesChile}\r\n                    value={tramo.origen}\r\n                    onChange={(opt: SingleValue<{ value: string; label: string }>) => handleTramoChange(idx, 'origen', opt)}\r\n                    placeholder=\"Buscar ciudad...\"\r\n                    isSearchable\r\n                  />\r\n                </div>\r\n                <span className=\"text-sm\">Destino</span>\r\n                <div className=\"w-40\">\r\n                  <Select\r\n                    options={ciudadesChile}\r\n                    value={tramo.destino}\r\n                    onChange={(opt: SingleValue<{ value: string; label: string }>) => handleTramoChange(idx, 'destino', opt)}\r\n                    placeholder=\"Buscar ciudad...\"\r\n                    isSearchable\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"border px-2 py-1 rounded w-24\"\r\n                  placeholder=\"Km\"\r\n                  value={tramo.kilometraje}\r\n                  min={0}\r\n                  onChange={e => handleTramoChange(idx, 'kilometraje', Number(e.target.value))}\r\n                  required\r\n                />\r\n                <button type=\"button\" onClick={handleAddTramo} className=\"text-green-600 text-xl font-bold\">＋</button>\r\n                <button type=\"button\" onClick={() => handleRemoveTramo(idx)} className=\"text-red-500 text-xl font-bold\">－</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex justify-end gap-2\">\r\n            <button type=\"button\" onClick={() => setModalOpen(false)} className=\"bg-gray-400 text-white px-4 py-2 rounded\">Cancelar</button>\r\n            <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">Guardar zona</button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n      {/* Eliminar el modal y lógica de edición de tramo individual */}\r\n      {successMsg && (\r\n        <div className=\"bg-green-100 text-green-800 px-4 py-2 rounded mb-4 text-center font-semibold\">\r\n          {successMsg}\r\n        </div>\r\n      )}\r\n      <table className=\"min-w-full border divide-y divide-gray-200 text-sm mt-8\">\r\n        <thead className=\"bg-gray-100\">\r\n          <tr>\r\n            <th className=\"px-4 py-2 text-left\">Nombre</th>\r\n            <th className=\"px-4 py-2 text-left\">Porcentaje (%)</th>\r\n            <th className=\"px-4 py-2 text-left\">Tramos asociados</th>\r\n            <th className=\"px-4 py-2 text-left\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {zones.map(zone => (\r\n            <tr key={zone.id} className=\"border-b align-top\">\r\n              <td className=\"px-4 py-2 font-medium\">{zone.nombre}</td>\r\n              <td className=\"px-4 py-2\">{zone.porcentaje}</td>\r\n              <td className=\"px-4 py-2\">\r\n                {routesByZone[zone.id]?.length ? (\r\n                  <table className=\"border w-full text-xs\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-2 py-1\">Origen</th>\r\n                        <th className=\"px-2 py-1\">Destino</th>\r\n                        <th className=\"px-2 py-1\">Km</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {routesByZone[zone.id].map((r, i) => (\r\n                        <tr key={i}>\r\n                          <td className=\"px-2 py-1\">{r.origen}</td>\r\n                          <td className=\"px-2 py-1\">{r.destino}</td>\r\n                          <td className=\"px-2 py-1\">{r.kilometraje}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                ) : (\r\n                  <span className=\"text-gray-400\">Sin tramos</span>\r\n                )}\r\n              </td>\r\n              <td className=\"px-4 py-2\">\r\n                <button\r\n                  className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\"\r\n                  onClick={() => handleEditZone(zone)}\r\n                >\r\n                  Editar\r\n                </button>\r\n                <button\r\n                  className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                  onClick={() => handleDeleteZone(zone.id)}\r\n                >\r\n                  Eliminar zona\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistroRecorridos; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}