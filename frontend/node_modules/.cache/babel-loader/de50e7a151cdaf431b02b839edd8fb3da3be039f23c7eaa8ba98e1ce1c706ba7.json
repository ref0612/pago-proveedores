{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pasaj\\\\Music\\\\pullman-payment-system\\\\frontend\\\\src\\\\modules\\\\Recorridos\\\\RegistroRecorridos.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport Modal from 'react-modal';\nimport * as XLSX from 'xlsx';\n\n// Lista exhaustiva de ciudades de Chile (puedes expandirla)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ciudadesChile = [{\n  value: 'Cartagena',\n  label: 'Cartagena'\n}, {\n  value: 'Concón',\n  label: 'Concón'\n}, {\n  value: 'El Tabo',\n  label: 'El Tabo'\n}, {\n  value: 'Laguna Verde',\n  label: 'Laguna Verde'\n}, {\n  value: 'Limache',\n  label: 'Limache'\n}, {\n  value: 'Los Andes',\n  label: 'Los Andes'\n}, {\n  value: 'San Antonio',\n  label: 'San Antonio'\n}, {\n  value: 'San Felipe',\n  label: 'San Felipe'\n}, {\n  value: 'Santiago',\n  label: 'Santiago'\n}, {\n  value: 'Santo Domingo',\n  label: 'Santo Domingo'\n}, {\n  value: 'Valparaiso',\n  label: 'Valparaiso'\n}, {\n  value: 'Villa Alemana',\n  label: 'Villa Alemana'\n}, {\n  value: 'Viña Del Mar',\n  label: 'Viña Del Mar'\n}];\nconst RegistroRecorridos = () => {\n  _s();\n  const [zones, setZones] = useState([]);\n  const [nombre, setNombre] = useState('');\n  const [porcentaje, setPorcentaje] = useState(0);\n  const [editId, setEditId] = useState(null);\n  const [successMsg, setSuccessMsg] = useState('');\n\n  // Modal\n  const [modalOpen, setModalOpen] = useState(false);\n  // Formulario zona\n  const [nombreZona, setNombreZona] = useState('');\n  const [porcentajeZona, setPorcentajeZona] = useState(0);\n  // Tramos dinámicos\n  const [tramos, setTramos] = useState([{\n    origen: null,\n    destino: null,\n    kilometraje: 0\n  }]);\n\n  // Estado para edición de zona\n  const [editZone, setEditZone] = useState(null);\n  // Estado para edición de tramo\n  const [editTramo, setEditTramo] = useState(null);\n\n  // Estado para modal de resumen de importación masiva\n  const [bulkSummary, setBulkSummary] = useState(null);\n  const [bulkErrors, setBulkErrors] = useState([]);\n  const [bulkWarnings, setBulkWarnings] = useState([]);\n  const [bulkData, setBulkData] = useState({});\n  const [bulkModalOpen, setBulkModalOpen] = useState(false);\n\n  // Estado para ciudades no configuradas\n  const [unconfiguredCities, setUnconfiguredCities] = useState([]);\n  const [showCitiesModal, setShowCitiesModal] = useState(false);\n  const [loadingCities, setLoadingCities] = useState(false);\n\n  // Cargar zonas al montar\n  useEffect(() => {\n    fetch('/api/zones').then(res => res.json()).then(data => setZones(data)).catch(err => console.error('Error cargando zonas:', err));\n  }, []);\n\n  // Modal config\n  useEffect(() => {\n    Modal.setAppElement('#root');\n  }, []);\n\n  // Handlers tramos\n  const handleTramoChange = (idx, field, value) => {\n    setTramos(tramos => tramos.map((t, i) => i === idx ? {\n      ...t,\n      [field]: value\n    } : t));\n  };\n  const handleAddTramo = () => {\n    setTramos([...tramos, {\n      origen: null,\n      destino: null,\n      kilometraje: 0\n    }]);\n  };\n  const handleRemoveTramo = idx => {\n    if (tramos.length === 1) return;\n    setTramos(tramos => tramos.filter((_, i) => i !== idx));\n  };\n\n  // Crear o editar zona\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!nombre || porcentaje <= 0) return;\n    const zona = {\n      nombre,\n      porcentaje\n    };\n    if (editId) {\n      // Editar\n      const res = await fetch(`/api/zones/${editId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(zona)\n      });\n      if (res.ok) {\n        const zonaEditada = await res.json();\n        setZones(zones.map(z => z.id === editId ? zonaEditada : z));\n        setEditId(null);\n        setNombre('');\n        setPorcentaje(0);\n      }\n    } else {\n      // Crear\n      const res = await fetch('/api/zones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(zona)\n      });\n      if (res.ok) {\n        const zonaCreada = await res.json();\n        setZones([...zones, zonaCreada]);\n        setNombre('');\n        setPorcentaje(0);\n      }\n    }\n  };\n\n  // Eliminar zona\n  const handleDelete = async id => {\n    if (!id) return;\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona?')) return;\n    const res = await fetch(`/api/zones/${id}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      setZones(zones.filter(z => z.id !== id));\n    }\n  };\n\n  // Editar zona (cargar en formulario)\n  const handleEdit = zone => {\n    setEditId(zone.id);\n    setNombre(zone.nombre);\n    setPorcentaje(zone.porcentaje);\n  };\n\n  // Cancelar edición\n  const handleCancelEdit = () => {\n    setEditId(null);\n    setNombre('');\n    setPorcentaje(0);\n  };\n\n  // Abrir modal para editar zona\n  const handleEditZone = zone => {\n    setEditZone(zone);\n    setNombreZona(zone.nombre);\n    setPorcentajeZona(zone.porcentaje);\n    // Mostrar los tramos asociados en el modal (solo visualización)\n    const tramosZona = routesByZone[zone.id] || [];\n    setTramos(tramosZona.map(t => ({\n      origen: ciudadesChile.find(c => c.value === t.origen) || {\n        value: t.origen,\n        label: t.origen\n      },\n      destino: ciudadesChile.find(c => c.value === t.destino) || {\n        value: t.destino,\n        label: t.destino\n      },\n      kilometraje: t.kilometraje\n    })));\n    setModalOpen(true);\n  };\n\n  // Guardar edición de zona (ahora permite CRUD de tramos)\n  const handleSubmitModal = async e => {\n    e.preventDefault();\n    try {\n      let zonaCreada = editZone;\n      // 1. Actualizar zona (nombre, porcentaje)\n      if (editZone) {\n        const zonaRes = await fetch(`/api/zones/${editZone.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nombre: nombreZona,\n            porcentaje: porcentajeZona\n          })\n        });\n        if (!zonaRes.ok) throw new Error('Error actualizando zona');\n        zonaCreada = await zonaRes.json();\n      } else {\n        // Crear zona nueva\n        const zonaRes = await fetch('/api/zones', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nombre: nombreZona,\n            porcentaje: porcentajeZona\n          })\n        });\n        if (!zonaRes.ok) throw new Error('Error creando zona');\n        zonaCreada = await zonaRes.json();\n      }\n      // 2. Obtener tramos actuales en backend (solo si es edición)\n      let tramosBackend = [];\n      if (editZone) {\n        const routesRes = await fetch('/api/routes');\n        const allRoutes = await routesRes.json();\n        tramosBackend = allRoutes.filter(r => r.zona && r.zona.id === editZone.id);\n      }\n      // 3. Determinar tramos a crear y a eliminar\n      const tramosValidos = tramos.filter(t => t.origen && t.destino && t.kilometraje > 0);\n      // Tramos a crear: los que no existen en backend\n      const tramosToCreate = tramosValidos.filter(t => !tramosBackend.some(tb => {\n        var _t$origen, _t$destino;\n        return tb.origen === ((_t$origen = t.origen) === null || _t$origen === void 0 ? void 0 : _t$origen.value) && tb.destino === ((_t$destino = t.destino) === null || _t$destino === void 0 ? void 0 : _t$destino.value);\n      }));\n      // Tramos a eliminar: los que están en backend pero no en el array actual\n      const tramosToDelete = tramosBackend.filter(tb => !tramosValidos.some(t => {\n        var _t$origen2, _t$destino2;\n        return ((_t$origen2 = t.origen) === null || _t$origen2 === void 0 ? void 0 : _t$origen2.value) === tb.origen && ((_t$destino2 = t.destino) === null || _t$destino2 === void 0 ? void 0 : _t$destino2.value) === tb.destino;\n      }));\n      // 4. Crear tramos nuevos\n      await Promise.all(tramosToCreate.map(tramo => {\n        var _tramo$origen, _tramo$destino;\n        return fetch('/api/routes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            origen: (_tramo$origen = tramo.origen) === null || _tramo$origen === void 0 ? void 0 : _tramo$origen.value,\n            destino: (_tramo$destino = tramo.destino) === null || _tramo$destino === void 0 ? void 0 : _tramo$destino.value,\n            kilometraje: tramo.kilometraje,\n            zona: zonaCreada\n          })\n        });\n      }));\n      // 5. Eliminar tramos quitados\n      await Promise.all(tramosToDelete.map(tb => fetch(`/api/routes/${tb.id}`, {\n        method: 'DELETE'\n      })));\n      // 6. Actualizar listado de zonas\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\n      setZones(zonasActualizadas);\n      setModalOpen(false);\n      setEditZone(null);\n      setNombreZona('');\n      setPorcentajeZona(0);\n      setTramos([{\n        origen: null,\n        destino: null,\n        kilometraje: 0\n      }]);\n      setSuccessMsg(editZone ? 'Zona y tramos actualizados correctamente' : 'Zona y tramos guardados correctamente');\n      setTimeout(() => setSuccessMsg(''), 2500);\n    } catch (err) {\n      alert('Error guardando zona y tramos: ' + err.message);\n    }\n  };\n\n  // Mostrar tramos asociados a cada zona\n  const [routesByZone, setRoutesByZone] = useState({});\n  useEffect(() => {\n    // Cargar tramos para cada zona\n    const fetchRoutes = async () => {\n      const routesRes = await fetch('/api/routes');\n      const allRoutes = await routesRes.json();\n      const grouped = {};\n      allRoutes.forEach(route => {\n        if (route.zona && route.zona.id) {\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\n          grouped[route.zona.id].push(route);\n        }\n      });\n      setRoutesByZone(grouped);\n    };\n    fetchRoutes();\n  }, [zones]);\n\n  // Eliminar zona y sus tramos asociados\n  const handleDeleteZone = async id => {\n    if (!id) return;\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona y todos sus tramos asociados?')) return;\n    // Eliminar tramos asociados primero\n    const tramos = routesByZone[id] || [];\n    await Promise.all(tramos.map(tramo => fetch(`/api/routes/${tramo.id}`, {\n      method: 'DELETE'\n    })));\n    // Eliminar zona\n    const res = await fetch(`/api/zones/${id}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\n      setZones(zonasActualizadas);\n      setSuccessMsg('Zona eliminada correctamente');\n      setTimeout(() => setSuccessMsg(''), 2500);\n    }\n  };\n\n  // Eliminar tramo individual\n  const handleDeleteTramo = async (tramoId, zoneId) => {\n    if (!window.confirm('¿Seguro que deseas eliminar este tramo?')) return;\n    const res = await fetch(`/api/routes/${tramoId}`, {\n      method: 'DELETE'\n    });\n    if (res.ok) {\n      // Actualizar tramos de la zona\n      const routesRes = await fetch('/api/routes');\n      const allRoutes = await routesRes.json();\n      const grouped = {};\n      allRoutes.forEach(route => {\n        if (route.zona && route.zona.id) {\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\n          grouped[route.zona.id].push(route);\n        }\n      });\n      setRoutesByZone(grouped);\n      setSuccessMsg('Tramo eliminado correctamente');\n      setTimeout(() => setSuccessMsg(''), 2500);\n    }\n  };\n\n  // Eliminar el modal y lógica de edición de tramo individual\n\n  // Carga masiva desde Excel/CSV con validación y agrupación\n  const handleBulkUpload = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async evt => {\n      var _evt$target;\n      const data = (_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.result;\n      if (!data) return;\n      const workbook = XLSX.read(data, {\n        type: 'binary'\n      });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const rows = XLSX.utils.sheet_to_json(sheet, {\n        header: 1\n      });\n      // Buscar encabezado\n      const header = rows[0].map(h => h.trim().toLowerCase());\n      const idxNombre = header.indexOf('nombre');\n      const idxOrigen = header.indexOf('origen');\n      const idxDestino = header.indexOf('destino');\n      const idxKm = header.indexOf('km');\n      const idxPorcentaje = header.indexOf('porcentaje');\n      const errors = [];\n      const warnings = [];\n      if (idxNombre === -1 || idxOrigen === -1 || idxDestino === -1 || idxKm === -1 || idxPorcentaje === -1) {\n        errors.push('El archivo debe tener los encabezados: Nombre | Origen | Destino | KM | Porcentaje');\n      }\n      // Agrupar por zona\n      const zonasMap = {};\n      for (let i = 1; i < rows.length; i++) {\n        const row = rows[i];\n        const nombre = String(row[idxNombre] || '').trim();\n        const origen = String(row[idxOrigen] || '').trim();\n        const destino = String(row[idxDestino] || '').trim();\n        const km = Number(row[idxKm]);\n        const porcentaje = Number(row[idxPorcentaje]);\n        // Validaciones\n        if (!nombre || !origen || !destino || !row[idxKm] || !row[idxPorcentaje]) {\n          errors.push(`Fila ${i + 1}: Todos los campos son obligatorios.`);\n          continue;\n        }\n        if (isNaN(km) || km <= 0) {\n          errors.push(`Fila ${i + 1}: KM debe ser un número positivo.`);\n        }\n        if (isNaN(porcentaje) || porcentaje <= 0) {\n          errors.push(`Fila ${i + 1}: Porcentaje debe ser un número positivo.`);\n        }\n        // Agrupar por zona\n        if (!zonasMap[nombre]) {\n          zonasMap[nombre] = {\n            porcentaje,\n            tramos: []\n          };\n        } else {\n          // Validar que el porcentaje sea consistente\n          if (zonasMap[nombre].porcentaje !== porcentaje) {\n            errors.push(`Fila ${i + 1}: El porcentaje de la zona '${nombre}' no es consistente con otras filas.`);\n          }\n        }\n        zonasMap[nombre].tramos.push({\n          origen,\n          destino,\n          km\n        });\n      }\n      // Validar duplicados y existencia en backend\n      const zonasExistentes = await fetch('/api/zones').then(res => res.json());\n      const routesExistentes = await fetch('/api/routes').then(res => res.json());\n      const resumen = [];\n      Object.entries(zonasMap).forEach(([nombre, data]) => {\n        const zonaExistente = zonasExistentes.find(z => z.nombre === nombre);\n        const tramosNuevos = [];\n        const tramosDuplicados = [];\n        data.tramos.forEach(t => {\n          const existe = routesExistentes.some(r => r.zona && r.zona.nombre === nombre && (r.origen === t.origen && r.destino === t.destino || r.origen === t.destino && r.destino === t.origen));\n          if (existe) {\n            tramosDuplicados.push(t);\n            warnings.push(`El tramo ${t.origen} - ${t.destino} ya existe en la zona '${nombre}'. Agregarlo podría duplicar el pago de producción.`);\n          } else {\n            tramosNuevos.push(t);\n          }\n        });\n        resumen.push({\n          nombre,\n          porcentaje: data.porcentaje,\n          zonaExistente: !!zonaExistente,\n          tramosNuevos,\n          tramosDuplicados\n        });\n        if (zonaExistente) {\n          warnings.push(`La zona '${nombre}' ya existe y será actualizada.`);\n        }\n      });\n      setBulkSummary(resumen);\n      setBulkErrors(errors);\n      setBulkWarnings(warnings);\n      setBulkData(zonasMap);\n      setBulkModalOpen(true);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  // Actualizar routesExistentes al cargar el modal de carga masiva\n  const [routesExistentes, setRoutesExistentes] = useState([]);\n  useEffect(() => {\n    fetch('/api/routes').then(res => res.json()).then(setRoutesExistentes);\n  }, [bulkModalOpen]);\n\n  // Confirmar importación masiva\n  const handleBulkConfirm = async () => {\n    setBulkModalOpen(false);\n    for (const nombre in bulkData) {\n      const data = bulkData[nombre];\n      // Buscar o crear zona\n      let zona = zones.find(z => z.nombre === nombre);\n      if (!zona) {\n        const res = await fetch('/api/zones', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nombre,\n            porcentaje: data.porcentaje\n          })\n        });\n        if (!res.ok) continue;\n        zona = await res.json();\n      } else {\n        // Actualizar porcentaje si cambió\n        if (zona.porcentaje !== data.porcentaje) {\n          await fetch(`/api/zones/${zona.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              nombre,\n              porcentaje: data.porcentaje\n            })\n          });\n        }\n      }\n      // Crear tramos nuevos (comparando localmente)\n      for (const tramo of data.tramos) {\n        const existe = routesExistentes.some(r => r.zona && r.zona.nombre === nombre && (r.origen === tramo.origen && r.destino === tramo.destino || r.origen === tramo.destino && r.destino === tramo.origen));\n        if (!existe) {\n          await fetch('/api/routes', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              origen: tramo.origen,\n              destino: tramo.destino,\n              kilometraje: tramo.km,\n              zona\n            })\n          });\n        }\n      }\n    }\n    // Refrescar zonas y tramos\n    const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\n    setZones(zonasActualizadas);\n    fetch('/api/routes').then(res => res.json()).then(setRoutesExistentes);\n    setSuccessMsg('Carga masiva completada');\n    setTimeout(() => setSuccessMsg(''), 2500);\n  };\n\n  // Función para obtener ciudades no configuradas\n  const fetchUnconfiguredCities = async () => {\n    setLoadingCities(true);\n    try {\n      const response = await fetch('/api/zones/unconfigured-cities');\n      if (response.ok) {\n        const cities = await response.json();\n        setUnconfiguredCities(cities);\n        setShowCitiesModal(true);\n      } else {\n        console.error('Error obteniendo ciudades no configuradas');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoadingCities(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Manejo de Zonas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-6 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        onClick: () => setModalOpen(true),\n        children: \"Crear zona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-orange-600 text-white px-4 py-2 rounded\",\n        onClick: fetchUnconfiguredCities,\n        disabled: loadingCities,\n        children: loadingCities ? 'Cargando...' : 'Ver ciudades sin configurar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\",\n        children: [\"Carga masiva (Excel)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.csv\",\n          onChange: handleBulkUpload,\n          className: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onRequestClose: () => {\n        setModalOpen(false);\n        setEditZone(null);\n      },\n      contentLabel: editZone ? \"Editar Zona\" : \"Crear Zona\",\n      className: \"bg-white rounded-lg shadow-lg max-w-2xl w-full mx-auto mt-20 outline-none flex flex-col max-h-[90vh]\",\n      overlayClassName: \"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: editZone ? \"Editar Zona\" : \"Crear Zona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitModal,\n        className: \"flex flex-col flex-1 min-h-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-y-auto min-h-0 flex-1 pr-2\",\n          style: {\n            maxHeight: '60vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"Nombre de la zona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: nombreZona,\n              onChange: e => setNombreZona(e.target.value),\n              className: \"border px-2 py-1 rounded w-full\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"% de comisi\\xF3n de la zona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: porcentajeZona,\n              onChange: e => setPorcentajeZona(Number(e.target.value.replace(/[^\\d.]/g, ''))),\n              className: \"border px-2 py-1 rounded w-full\",\n              inputMode: \"decimal\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), editZone && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Tramos configurados en la zona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this), tramos.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"border w-full text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"Origen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"Destino\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"Km\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tramos.map((t, i) => {\n                  var _t$origen$label, _t$origen3, _t$destino$label, _t$destino3;\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: (_t$origen$label = (_t$origen3 = t.origen) === null || _t$origen3 === void 0 ? void 0 : _t$origen3.label) !== null && _t$origen$label !== void 0 ? _t$origen$label : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: (_t$destino$label = (_t$destino3 = t.destino) === null || _t$destino3 === void 0 ? void 0 : _t$destino3.label) !== null && _t$destino$label !== void 0 ? _t$destino$label : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: t.kilometraje\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 27\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: \"Sin tramos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Tramos de la zona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this), tramos.map((tramo, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Origen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-40\",\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  options: ciudadesChile,\n                  value: tramo.origen,\n                  onChange: opt => handleTramoChange(idx, 'origen', opt),\n                  placeholder: \"Buscar ciudad...\",\n                  isSearchable: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Destino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-40\",\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  options: ciudadesChile,\n                  value: tramo.destino,\n                  onChange: opt => handleTramoChange(idx, 'destino', opt),\n                  placeholder: \"Buscar ciudad...\",\n                  isSearchable: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"border px-2 py-1 rounded w-24\",\n                placeholder: \"Km\",\n                value: tramo.kilometraje,\n                min: 0,\n                onChange: e => handleTramoChange(idx, 'kilometraje', Number(e.target.value)),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleAddTramo,\n                className: \"text-green-600 text-xl font-bold\",\n                children: \"\\uFF0B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveTramo(idx),\n                className: \"text-red-500 text-xl font-bold\",\n                children: \"\\uFF0D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2 pt-4 border-t bg-white sticky bottom-0 z-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalOpen(false),\n            className: \"bg-gray-400 text-white px-4 py-2 rounded\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n            children: \"Guardar zona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: bulkModalOpen,\n      onRequestClose: () => setBulkModalOpen(false),\n      contentLabel: \"Resumen de importaci\\xF3n\",\n      className: \"bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto mt-20 outline-none\",\n      overlayClassName: \"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Resumen de importaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), bulkErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: bulkErrors.map((err, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-600 font-semibold\",\n          children: err\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this), bulkWarnings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: bulkWarnings.map((warn, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-orange-500 font-semibold\",\n          children: warn\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this), bulkSummary && bulkErrors.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: bulkSummary.map((z, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold\",\n            children: [\"Zona: \", z.nombre, \" (\", z.zonaExistente ? 'Actualizar' : 'Crear nueva', \") - %: \", z.porcentaje]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Tramos a agregar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 19\n            }, this), \" \", z.tramosNuevos.map(t => `${t.origen} - ${t.destino} (${t.km} km)`).join(', ') || 'Ninguno']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 17\n          }, this), z.tramosDuplicados.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-4 text-orange-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: \"Tramos duplicados:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 21\n            }, this), \" \", z.tramosDuplicados.map(t => `${t.origen} - ${t.destino}`).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end gap-2 mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setBulkModalOpen(false),\n          className: \"bg-gray-400 text-white px-4 py-2 rounded\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleBulkConfirm,\n          className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n          disabled: bulkErrors.length > 0,\n          children: \"Confirmar importaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCitiesModal,\n      onRequestClose: () => setShowCitiesModal(false),\n      contentLabel: \"Ciudades no configuradas\",\n      className: \"bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto mt-20 outline-none\",\n      overlayClassName: \"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Ciudades no configuradas en zonas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), unconfiguredCities.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-gray-700\",\n          children: \"Las siguientes ciudades est\\xE1n presentes en los viajes pero no est\\xE1n configuradas en ninguna zona. Por favor, as\\xEDgnalas a una zona para poder usarlas correctamente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-h-60 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc pl-5 text-gray-800 space-y-1\",\n            children: unconfiguredCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-sm\",\n              children: city\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600 font-medium\",\n        children: \"\\xA1Excelente! Todas las ciudades presentes en los viajes est\\xE1n correctamente configuradas en zonas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCitiesModal(false),\n          className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n          children: \"Entendido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }, this), successMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 text-green-800 px-4 py-2 rounded mb-4 text-center font-semibold\",\n      children: successMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full border divide-y divide-gray-200 text-sm mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Porcentaje (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Tramos asociados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 text-left\",\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: zones.map(zone => {\n          var _routesByZone$zone$id;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b align-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 font-medium\",\n              children: zone.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: zone.porcentaje\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: (_routesByZone$zone$id = routesByZone[zone.id]) !== null && _routesByZone$zone$id !== void 0 && _routesByZone$zone$id.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"border w-full text-xs\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Origen\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 723,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Destino\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 724,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Km\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: routesByZone[zone.id].map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: r.origen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: r.destino\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: r.kilometraje\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 27\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-400\",\n                children: \"Sin tramos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-yellow-500 text-white px-2 py-1 rounded mr-2\",\n                onClick: () => handleEditZone(zone),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-red-500 text-white px-2 py-1 rounded\",\n                onClick: () => handleDeleteZone(zone.id),\n                children: \"Eliminar zona\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this)]\n          }, zone.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 476,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistroRecorridos, \"xh3r9ICHjYOmfztfHgqnW1qOoUE=\");\n_c = RegistroRecorridos;\nexport default RegistroRecorridos;\nvar _c;\n$RefreshReg$(_c, \"RegistroRecorridos\");","map":{"version":3,"names":["React","useState","useEffect","Select","Modal","XLSX","jsxDEV","_jsxDEV","ciudadesChile","value","label","RegistroRecorridos","_s","zones","setZones","nombre","setNombre","porcentaje","setPorcentaje","editId","setEditId","successMsg","setSuccessMsg","modalOpen","setModalOpen","nombreZona","setNombreZona","porcentajeZona","setPorcentajeZona","tramos","setTramos","origen","destino","kilometraje","editZone","setEditZone","editTramo","setEditTramo","bulkSummary","setBulkSummary","bulkErrors","setBulkErrors","bulkWarnings","setBulkWarnings","bulkData","setBulkData","bulkModalOpen","setBulkModalOpen","unconfiguredCities","setUnconfiguredCities","showCitiesModal","setShowCitiesModal","loadingCities","setLoadingCities","fetch","then","res","json","data","catch","err","console","error","setAppElement","handleTramoChange","idx","field","map","t","i","handleAddTramo","handleRemoveTramo","length","filter","_","handleSubmit","e","preventDefault","zona","method","headers","body","JSON","stringify","ok","zonaEditada","z","id","zonaCreada","handleDelete","window","confirm","handleEdit","zone","handleCancelEdit","handleEditZone","tramosZona","routesByZone","find","c","handleSubmitModal","zonaRes","Error","tramosBackend","routesRes","allRoutes","r","tramosValidos","tramosToCreate","some","tb","_t$origen","_t$destino","tramosToDelete","_t$origen2","_t$destino2","Promise","all","tramo","_tramo$origen","_tramo$destino","zonasActualizadas","setTimeout","alert","message","setRoutesByZone","fetchRoutes","grouped","forEach","route","push","handleDeleteZone","handleDeleteTramo","tramoId","zoneId","handleBulkUpload","_e$target$files","file","target","files","reader","FileReader","onload","evt","_evt$target","result","workbook","read","type","sheet","Sheets","SheetNames","rows","utils","sheet_to_json","header","h","trim","toLowerCase","idxNombre","indexOf","idxOrigen","idxDestino","idxKm","idxPorcentaje","errors","warnings","zonasMap","row","String","km","Number","isNaN","zonasExistentes","routesExistentes","resumen","Object","entries","zonaExistente","tramosNuevos","tramosDuplicados","existe","readAsBinaryString","setRoutesExistentes","handleBulkConfirm","fetchUnconfiguredCities","response","cities","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","accept","onChange","isOpen","onRequestClose","contentLabel","overlayClassName","onSubmit","style","maxHeight","required","replace","inputMode","_t$origen$label","_t$origen3","_t$destino$label","_t$destino3","options","opt","placeholder","isSearchable","min","warn","join","city","index","_routesByZone$zone$id","_c","$RefreshReg$"],"sources":["C:/Users/pasaj/Music/pullman-payment-system/frontend/src/modules/Recorridos/RegistroRecorridos.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport Modal from 'react-modal';\r\nimport { SingleValue } from 'react-select';\r\nimport * as XLSX from 'xlsx';\r\n\r\n// Lista exhaustiva de ciudades de Chile (puedes expandirla)\r\nconst ciudadesChile = [\r\n  { value: 'Cartagena', label: 'Cartagena' },\r\n  { value: 'Concón', label: 'Concón' },\r\n  { value: 'El Tabo', label: 'El Tabo' },\r\n  { value: 'Laguna Verde', label: 'Laguna Verde' },\r\n  { value: 'Limache', label: 'Limache' },\r\n  { value: 'Los Andes', label: 'Los Andes' },\r\n  { value: 'San Antonio', label: 'San Antonio' },\r\n  { value: 'San Felipe', label: 'San Felipe' },\r\n  { value: 'Santiago', label: 'Santiago' },\r\n  { value: 'Santo Domingo', label: 'Santo Domingo' },\r\n  { value: 'Valparaiso', label: 'Valparaiso' },\r\n  { value: 'Villa Alemana', label: 'Villa Alemana' },\r\n  { value: 'Viña Del Mar', label: 'Viña Del Mar' },\r\n];\r\n\r\ninterface Tramo {\r\n  origen: { value: string; label: string } | null;\r\n  destino: { value: string; label: string } | null;\r\n  kilometraje: number;\r\n}\r\n\r\nconst RegistroRecorridos: React.FC = () => {\r\n  const [zones, setZones] = useState<any[]>([]);\r\n  const [nombre, setNombre] = useState('');\r\n  const [porcentaje, setPorcentaje] = useState<number>(0);\r\n  const [editId, setEditId] = useState<number | null>(null);\r\n  const [successMsg, setSuccessMsg] = useState('');\r\n\r\n  // Modal\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  // Formulario zona\r\n  const [nombreZona, setNombreZona] = useState('');\r\n  const [porcentajeZona, setPorcentajeZona] = useState<number>(0);\r\n  // Tramos dinámicos\r\n  const [tramos, setTramos] = useState<Tramo[]>([\r\n    { origen: null, destino: null, kilometraje: 0 },\r\n  ]);\r\n\r\n  // Estado para edición de zona\r\n  const [editZone, setEditZone] = useState<any | null>(null);\r\n  // Estado para edición de tramo\r\n  const [editTramo, setEditTramo] = useState<{ tramo: any, zoneId: number } | null>(null);\r\n\r\n  // Estado para modal de resumen de importación masiva\r\n  const [bulkSummary, setBulkSummary] = useState<any | null>(null);\r\n  const [bulkErrors, setBulkErrors] = useState<string[]>([]);\r\n  const [bulkWarnings, setBulkWarnings] = useState<string[]>([]);\r\n  const [bulkData, setBulkData] = useState<Record<string, { porcentaje: number, tramos: any[] }>>({});\r\n  const [bulkModalOpen, setBulkModalOpen] = useState(false);\r\n\r\n  // Estado para ciudades no configuradas\r\n  const [unconfiguredCities, setUnconfiguredCities] = useState<string[]>([]);\r\n  const [showCitiesModal, setShowCitiesModal] = useState(false);\r\n  const [loadingCities, setLoadingCities] = useState(false);\r\n\r\n  // Cargar zonas al montar\r\n  useEffect(() => {\r\n    fetch('/api/zones')\r\n      .then(res => res.json())\r\n      .then(data => setZones(data))\r\n      .catch(err => console.error('Error cargando zonas:', err));\r\n  }, []);\r\n\r\n  // Modal config\r\n  useEffect(() => {\r\n    Modal.setAppElement('#root');\r\n  }, []);\r\n\r\n  // Handlers tramos\r\n  const handleTramoChange = (idx: number, field: keyof Tramo, value: any) => {\r\n    setTramos(tramos =>\r\n      tramos.map((t, i) =>\r\n        i === idx ? { ...t, [field]: value } : t\r\n      )\r\n    );\r\n  };\r\n  const handleAddTramo = () => {\r\n    setTramos([...tramos, { origen: null, destino: null, kilometraje: 0 }]);\r\n  };\r\n  const handleRemoveTramo = (idx: number) => {\r\n    if (tramos.length === 1) return;\r\n    setTramos(tramos => tramos.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  // Crear o editar zona\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!nombre || porcentaje <= 0) return;\r\n    const zona = { nombre, porcentaje };\r\n    if (editId) {\r\n      // Editar\r\n      const res = await fetch(`/api/zones/${editId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(zona),\r\n      });\r\n      if (res.ok) {\r\n        const zonaEditada = await res.json();\r\n        setZones(zones.map(z => (z.id === editId ? zonaEditada : z)));\r\n        setEditId(null);\r\n        setNombre('');\r\n        setPorcentaje(0);\r\n      }\r\n    } else {\r\n      // Crear\r\n      const res = await fetch('/api/zones', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(zona),\r\n      });\r\n      if (res.ok) {\r\n        const zonaCreada = await res.json();\r\n        setZones([...zones, zonaCreada]);\r\n        setNombre('');\r\n        setPorcentaje(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Eliminar zona\r\n  const handleDelete = async (id?: number) => {\r\n    if (!id) return;\r\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona?')) return;\r\n    const res = await fetch(`/api/zones/${id}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      setZones(zones.filter(z => z.id !== id));\r\n    }\r\n  };\r\n\r\n  // Editar zona (cargar en formulario)\r\n  const handleEdit = (zone: any) => {\r\n    setEditId(zone.id!);\r\n    setNombre(zone.nombre);\r\n    setPorcentaje(zone.porcentaje);\r\n  };\r\n\r\n  // Cancelar edición\r\n  const handleCancelEdit = () => {\r\n    setEditId(null);\r\n    setNombre('');\r\n    setPorcentaje(0);\r\n  };\r\n\r\n  // Abrir modal para editar zona\r\n  const handleEditZone = (zone: any) => {\r\n    setEditZone(zone);\r\n    setNombreZona(zone.nombre);\r\n    setPorcentajeZona(zone.porcentaje);\r\n    // Mostrar los tramos asociados en el modal (solo visualización)\r\n    const tramosZona = routesByZone[zone.id] || [];\r\n    setTramos(tramosZona.map((t: any) => ({\r\n      origen: ciudadesChile.find(c => c.value === t.origen) || { value: t.origen, label: t.origen },\r\n      destino: ciudadesChile.find(c => c.value === t.destino) || { value: t.destino, label: t.destino },\r\n      kilometraje: t.kilometraje\r\n    })));\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Guardar edición de zona (ahora permite CRUD de tramos)\r\n  const handleSubmitModal = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      let zonaCreada = editZone;\r\n      // 1. Actualizar zona (nombre, porcentaje)\r\n      if (editZone) {\r\n        const zonaRes = await fetch(`/api/zones/${editZone.id}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ nombre: nombreZona, porcentaje: porcentajeZona }),\r\n        });\r\n        if (!zonaRes.ok) throw new Error('Error actualizando zona');\r\n        zonaCreada = await zonaRes.json();\r\n      } else {\r\n        // Crear zona nueva\r\n        const zonaRes = await fetch('/api/zones', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ nombre: nombreZona, porcentaje: porcentajeZona }),\r\n        });\r\n        if (!zonaRes.ok) throw new Error('Error creando zona');\r\n        zonaCreada = await zonaRes.json();\r\n      }\r\n      // 2. Obtener tramos actuales en backend (solo si es edición)\r\n      let tramosBackend: any[] = [];\r\n      if (editZone) {\r\n        const routesRes = await fetch('/api/routes');\r\n        const allRoutes = await routesRes.json();\r\n        tramosBackend = allRoutes.filter((r: any) => r.zona && r.zona.id === editZone.id);\r\n      }\r\n      // 3. Determinar tramos a crear y a eliminar\r\n      const tramosValidos = tramos.filter(t => t.origen && t.destino && t.kilometraje > 0);\r\n      // Tramos a crear: los que no existen en backend\r\n      const tramosToCreate = tramosValidos.filter(t =>\r\n        !tramosBackend.some(tb => tb.origen === t.origen?.value && tb.destino === t.destino?.value)\r\n      );\r\n      // Tramos a eliminar: los que están en backend pero no en el array actual\r\n      const tramosToDelete = tramosBackend.filter(tb =>\r\n        !tramosValidos.some(t => t.origen?.value === tb.origen && t.destino?.value === tb.destino)\r\n      );\r\n      // 4. Crear tramos nuevos\r\n      await Promise.all(\r\n        tramosToCreate.map(tramo =>\r\n          fetch('/api/routes', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              origen: tramo.origen?.value,\r\n              destino: tramo.destino?.value,\r\n              kilometraje: tramo.kilometraje,\r\n              zona: zonaCreada,\r\n            }),\r\n          })\r\n        )\r\n      );\r\n      // 5. Eliminar tramos quitados\r\n      await Promise.all(\r\n        tramosToDelete.map(tb =>\r\n          fetch(`/api/routes/${tb.id}`, { method: 'DELETE' })\r\n        )\r\n      );\r\n      // 6. Actualizar listado de zonas\r\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\r\n      setZones(zonasActualizadas);\r\n      setModalOpen(false);\r\n      setEditZone(null);\r\n      setNombreZona('');\r\n      setPorcentajeZona(0);\r\n      setTramos([{ origen: null, destino: null, kilometraje: 0 }]);\r\n      setSuccessMsg(editZone ? 'Zona y tramos actualizados correctamente' : 'Zona y tramos guardados correctamente');\r\n      setTimeout(() => setSuccessMsg(''), 2500);\r\n    } catch (err) {\r\n      alert('Error guardando zona y tramos: ' + (err as Error).message);\r\n    }\r\n  };\r\n\r\n  // Mostrar tramos asociados a cada zona\r\n  const [routesByZone, setRoutesByZone] = useState<{ [zoneId: number]: any[] }>({});\r\n  useEffect(() => {\r\n    // Cargar tramos para cada zona\r\n    const fetchRoutes = async () => {\r\n      const routesRes = await fetch('/api/routes');\r\n      const allRoutes = await routesRes.json();\r\n      const grouped: { [zoneId: number]: any[] } = {};\r\n      allRoutes.forEach((route: any) => {\r\n        if (route.zona && route.zona.id) {\r\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\r\n          grouped[route.zona.id].push(route);\r\n        }\r\n      });\r\n      setRoutesByZone(grouped);\r\n    };\r\n    fetchRoutes();\r\n  }, [zones]);\r\n\r\n  // Eliminar zona y sus tramos asociados\r\n  const handleDeleteZone = async (id?: number) => {\r\n    if (!id) return;\r\n    if (!window.confirm('¿Seguro que deseas eliminar esta zona y todos sus tramos asociados?')) return;\r\n    // Eliminar tramos asociados primero\r\n    const tramos = routesByZone[id] || [];\r\n    await Promise.all(tramos.map(tramo => fetch(`/api/routes/${tramo.id}`, { method: 'DELETE' })));\r\n    // Eliminar zona\r\n    const res = await fetch(`/api/zones/${id}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\r\n      setZones(zonasActualizadas);\r\n      setSuccessMsg('Zona eliminada correctamente');\r\n      setTimeout(() => setSuccessMsg(''), 2500);\r\n    }\r\n  };\r\n\r\n  // Eliminar tramo individual\r\n  const handleDeleteTramo = async (tramoId: number, zoneId: number) => {\r\n    if (!window.confirm('¿Seguro que deseas eliminar este tramo?')) return;\r\n    const res = await fetch(`/api/routes/${tramoId}`, { method: 'DELETE' });\r\n    if (res.ok) {\r\n      // Actualizar tramos de la zona\r\n      const routesRes = await fetch('/api/routes');\r\n      const allRoutes = await routesRes.json();\r\n      const grouped: { [zoneId: number]: any[] } = {};\r\n      allRoutes.forEach((route: any) => {\r\n        if (route.zona && route.zona.id) {\r\n          if (!grouped[route.zona.id]) grouped[route.zona.id] = [];\r\n          grouped[route.zona.id].push(route);\r\n        }\r\n      });\r\n      setRoutesByZone(grouped);\r\n      setSuccessMsg('Tramo eliminado correctamente');\r\n      setTimeout(() => setSuccessMsg(''), 2500);\r\n    }\r\n  };\r\n\r\n  // Eliminar el modal y lógica de edición de tramo individual\r\n\r\n  // Carga masiva desde Excel/CSV con validación y agrupación\r\n  const handleBulkUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = async (evt) => {\r\n      const data = evt.target?.result;\r\n      if (!data) return;\r\n      const workbook = XLSX.read(data, { type: 'binary' });\r\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const rows: any[] = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n      // Buscar encabezado\r\n      const header = rows[0].map((h: string) => h.trim().toLowerCase());\r\n      const idxNombre = header.indexOf('nombre');\r\n      const idxOrigen = header.indexOf('origen');\r\n      const idxDestino = header.indexOf('destino');\r\n      const idxKm = header.indexOf('km');\r\n      const idxPorcentaje = header.indexOf('porcentaje');\r\n      const errors: string[] = [];\r\n      const warnings: string[] = [];\r\n      if (idxNombre === -1 || idxOrigen === -1 || idxDestino === -1 || idxKm === -1 || idxPorcentaje === -1) {\r\n        errors.push('El archivo debe tener los encabezados: Nombre | Origen | Destino | KM | Porcentaje');\r\n      }\r\n      // Agrupar por zona\r\n      const zonasMap: Record<string, { porcentaje: number, tramos: any[] }> = {};\r\n      for (let i = 1; i < rows.length; i++) {\r\n        const row = rows[i];\r\n        const nombre = String(row[idxNombre] || '').trim();\r\n        const origen = String(row[idxOrigen] || '').trim();\r\n        const destino = String(row[idxDestino] || '').trim();\r\n        const km = Number(row[idxKm]);\r\n        const porcentaje = Number(row[idxPorcentaje]);\r\n        // Validaciones\r\n        if (!nombre || !origen || !destino || !row[idxKm] || !row[idxPorcentaje]) {\r\n          errors.push(`Fila ${i + 1}: Todos los campos son obligatorios.`);\r\n          continue;\r\n        }\r\n        if (isNaN(km) || km <= 0) {\r\n          errors.push(`Fila ${i + 1}: KM debe ser un número positivo.`);\r\n        }\r\n        if (isNaN(porcentaje) || porcentaje <= 0) {\r\n          errors.push(`Fila ${i + 1}: Porcentaje debe ser un número positivo.`);\r\n        }\r\n        // Agrupar por zona\r\n        if (!zonasMap[nombre]) {\r\n          zonasMap[nombre] = { porcentaje, tramos: [] };\r\n        } else {\r\n          // Validar que el porcentaje sea consistente\r\n          if (zonasMap[nombre].porcentaje !== porcentaje) {\r\n            errors.push(`Fila ${i + 1}: El porcentaje de la zona '${nombre}' no es consistente con otras filas.`);\r\n          }\r\n        }\r\n        zonasMap[nombre].tramos.push({ origen, destino, km });\r\n      }\r\n      // Validar duplicados y existencia en backend\r\n      const zonasExistentes = await fetch('/api/zones').then(res => res.json());\r\n      const routesExistentes = await fetch('/api/routes').then(res => res.json());\r\n      const resumen: any[] = [];\r\n      Object.entries(zonasMap).forEach(([nombre, data]) => {\r\n        const zonaExistente = zonasExistentes.find((z: any) => z.nombre === nombre);\r\n        const tramosNuevos: any[] = [];\r\n        const tramosDuplicados: any[] = [];\r\n        data.tramos.forEach((t: any) => {\r\n          const existe = routesExistentes.some((r: any) =>\r\n            r.zona && r.zona.nombre === nombre &&\r\n            ((r.origen === t.origen && r.destino === t.destino) || (r.origen === t.destino && r.destino === t.origen))\r\n          );\r\n          if (existe) {\r\n            tramosDuplicados.push(t);\r\n            warnings.push(`El tramo ${t.origen} - ${t.destino} ya existe en la zona '${nombre}'. Agregarlo podría duplicar el pago de producción.`);\r\n          } else {\r\n            tramosNuevos.push(t);\r\n          }\r\n        });\r\n        resumen.push({\r\n          nombre,\r\n          porcentaje: data.porcentaje,\r\n          zonaExistente: !!zonaExistente,\r\n          tramosNuevos,\r\n          tramosDuplicados\r\n        });\r\n        if (zonaExistente) {\r\n          warnings.push(`La zona '${nombre}' ya existe y será actualizada.`);\r\n        }\r\n      });\r\n      setBulkSummary(resumen);\r\n      setBulkErrors(errors);\r\n      setBulkWarnings(warnings);\r\n      setBulkData(zonasMap);\r\n      setBulkModalOpen(true);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  // Actualizar routesExistentes al cargar el modal de carga masiva\r\n  const [routesExistentes, setRoutesExistentes] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    fetch('/api/routes').then(res => res.json()).then(setRoutesExistentes);\r\n  }, [bulkModalOpen]);\r\n\r\n  // Confirmar importación masiva\r\n  const handleBulkConfirm = async () => {\r\n    setBulkModalOpen(false);\r\n    for (const nombre in bulkData) {\r\n      const data = bulkData[nombre];\r\n      // Buscar o crear zona\r\n      let zona = zones.find(z => z.nombre === nombre);\r\n      if (!zona) {\r\n        const res = await fetch('/api/zones', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ nombre, porcentaje: data.porcentaje }),\r\n        });\r\n        if (!res.ok) continue;\r\n        zona = await res.json();\r\n      } else {\r\n        // Actualizar porcentaje si cambió\r\n        if (zona.porcentaje !== data.porcentaje) {\r\n          await fetch(`/api/zones/${zona.id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ nombre, porcentaje: data.porcentaje }),\r\n          });\r\n        }\r\n      }\r\n      // Crear tramos nuevos (comparando localmente)\r\n      for (const tramo of data.tramos) {\r\n        const existe = routesExistentes.some((r: any) =>\r\n          r.zona && r.zona.nombre === nombre &&\r\n          ((r.origen === tramo.origen && r.destino === tramo.destino) || (r.origen === tramo.destino && r.destino === tramo.origen))\r\n        );\r\n        if (!existe) {\r\n          await fetch('/api/routes', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              origen: tramo.origen,\r\n              destino: tramo.destino,\r\n              kilometraje: tramo.km,\r\n              zona,\r\n            }),\r\n          });\r\n        }\r\n      }\r\n    }\r\n    // Refrescar zonas y tramos\r\n    const zonasActualizadas = await fetch('/api/zones').then(res => res.json());\r\n    setZones(zonasActualizadas);\r\n    fetch('/api/routes').then(res => res.json()).then(setRoutesExistentes);\r\n    setSuccessMsg('Carga masiva completada');\r\n    setTimeout(() => setSuccessMsg(''), 2500);\r\n  };\r\n\r\n  // Función para obtener ciudades no configuradas\r\n  const fetchUnconfiguredCities = async () => {\r\n    setLoadingCities(true);\r\n    try {\r\n      const response = await fetch('/api/zones/unconfigured-cities');\r\n      if (response.ok) {\r\n        const cities = await response.json();\r\n        setUnconfiguredCities(cities);\r\n        setShowCitiesModal(true);\r\n      } else {\r\n        console.error('Error obteniendo ciudades no configuradas');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoadingCities(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Manejo de Zonas</h1>\r\n      <div className=\"flex gap-4 mb-6 items-center\">\r\n        <button\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n          onClick={() => setModalOpen(true)}\r\n        >\r\n          Crear zona\r\n        </button>\r\n        <button\r\n          className=\"bg-orange-600 text-white px-4 py-2 rounded\"\r\n          onClick={fetchUnconfiguredCities}\r\n          disabled={loadingCities}\r\n        >\r\n          {loadingCities ? 'Cargando...' : 'Ver ciudades sin configurar'}\r\n        </button>\r\n        <label className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\">\r\n          Carga masiva (Excel)\r\n          <input\r\n            type=\"file\"\r\n            accept=\".xlsx,.csv\"\r\n            onChange={handleBulkUpload}\r\n            className=\"hidden\"\r\n          />\r\n        </label>\r\n      </div>\r\n      {/* Modal para crear/editar zona */}\r\n      <Modal\r\n        isOpen={modalOpen}\r\n        onRequestClose={() => { setModalOpen(false); setEditZone(null); }}\r\n        contentLabel={editZone ? \"Editar Zona\" : \"Crear Zona\"}\r\n        className=\"bg-white rounded-lg shadow-lg max-w-2xl w-full mx-auto mt-20 outline-none flex flex-col max-h-[90vh]\"\r\n        overlayClassName=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\"\r\n      >\r\n        <h2 className=\"text-xl font-bold mb-4\">{editZone ? \"Editar Zona\" : \"Crear Zona\"}</h2>\r\n        <form onSubmit={handleSubmitModal} className=\"flex flex-col flex-1 min-h-0\">\r\n          <div className=\"overflow-y-auto min-h-0 flex-1 pr-2\" style={{ maxHeight: '60vh' }}>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Nombre de la zona</label>\r\n              <input\r\n                type=\"text\"\r\n                value={nombreZona}\r\n                onChange={e => setNombreZona(e.target.value)}\r\n                className=\"border px-2 py-1 rounded w-full\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">% de comisión de la zona</label>\r\n              <input\r\n                type=\"text\"\r\n                value={porcentajeZona}\r\n                onChange={e => setPorcentajeZona(Number(e.target.value.replace(/[^\\d.]/g, '')))}\r\n                className=\"border px-2 py-1 rounded w-full\"\r\n                inputMode=\"decimal\"\r\n                required\r\n              />\r\n            </div>\r\n            {editZone && (\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Tramos configurados en la zona</label>\r\n                {tramos.length ? (\r\n                  <table className=\"border w-full text-xs\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-2 py-1\">Origen</th>\r\n                        <th className=\"px-2 py-1\">Destino</th>\r\n                        <th className=\"px-2 py-1\">Km</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {tramos.map((t, i) => (\r\n                        <tr key={i}>\r\n                          <td className=\"px-2 py-1\">{t.origen?.label ?? ''}</td>\r\n                          <td className=\"px-2 py-1\">{t.destino?.label ?? ''}</td>\r\n                          <td className=\"px-2 py-1\">{t.kilometraje}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                ) : (\r\n                  <span className=\"text-gray-400\">Sin tramos</span>\r\n                )}\r\n              </div>\r\n            )}\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-2\">Tramos de la zona</label>\r\n              {tramos.map((tramo, idx) => (\r\n                <div key={idx} className=\"flex items-center gap-2 mb-2\">\r\n                  <span className=\"text-sm\">Origen</span>\r\n                  <div className=\"w-40\">\r\n                    <Select\r\n                      options={ciudadesChile}\r\n                      value={tramo.origen}\r\n                      onChange={(opt: SingleValue<{ value: string; label: string }>) => handleTramoChange(idx, 'origen', opt)}\r\n                      placeholder=\"Buscar ciudad...\"\r\n                      isSearchable\r\n                    />\r\n                  </div>\r\n                  <span className=\"text-sm\">Destino</span>\r\n                  <div className=\"w-40\">\r\n                    <Select\r\n                      options={ciudadesChile}\r\n                      value={tramo.destino}\r\n                      onChange={(opt: SingleValue<{ value: string; label: string }>) => handleTramoChange(idx, 'destino', opt)}\r\n                      placeholder=\"Buscar ciudad...\"\r\n                      isSearchable\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"border px-2 py-1 rounded w-24\"\r\n                    placeholder=\"Km\"\r\n                    value={tramo.kilometraje}\r\n                    min={0}\r\n                    onChange={e => handleTramoChange(idx, 'kilometraje', Number(e.target.value))}\r\n                    required\r\n                  />\r\n                  <button type=\"button\" onClick={handleAddTramo} className=\"text-green-600 text-xl font-bold\">＋</button>\r\n                  <button type=\"button\" onClick={() => handleRemoveTramo(idx)} className=\"text-red-500 text-xl font-bold\">－</button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {/* Footer fijo */}\r\n          <div className=\"flex justify-end gap-2 pt-4 border-t bg-white sticky bottom-0 z-10\">\r\n            <button type=\"button\" onClick={() => setModalOpen(false)} className=\"bg-gray-400 text-white px-4 py-2 rounded\">Cancelar</button>\r\n            <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">Guardar zona</button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n      {/* Modal de resumen de importación masiva */}\r\n      <Modal\r\n        isOpen={bulkModalOpen}\r\n        onRequestClose={() => setBulkModalOpen(false)}\r\n        contentLabel=\"Resumen de importación\"\r\n        className=\"bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto mt-20 outline-none\"\r\n        overlayClassName=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center\"\r\n      >\r\n        <h2 className=\"text-xl font-bold mb-4\">Resumen de importación</h2>\r\n        {bulkErrors.length > 0 && (\r\n          <div className=\"mb-4\">\r\n            {bulkErrors.map((err, i) => (\r\n              <div key={i} className=\"text-red-600 font-semibold\">{err}</div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {bulkWarnings.length > 0 && (\r\n          <div className=\"mb-4\">\r\n            {bulkWarnings.map((warn, i) => (\r\n              <div key={i} className=\"text-orange-500 font-semibold\">{warn}</div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {bulkSummary && bulkErrors.length === 0 && (\r\n          <div className=\"mb-4\">\r\n            {bulkSummary.map((z: any, i: number) => (\r\n              <div key={i} className=\"mb-2\">\r\n                <div className=\"font-bold\">\r\n                  Zona: {z.nombre} ({z.zonaExistente ? 'Actualizar' : 'Crear nueva'}) - %: {z.porcentaje}\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <span className=\"font-semibold\">Tramos a agregar:</span> {z.tramosNuevos.map((t: any) => `${t.origen} - ${t.destino} (${t.km} km)`).join(', ') || 'Ninguno'}\r\n                </div>\r\n                {z.tramosDuplicados.length > 0 && (\r\n                  <div className=\"ml-4 text-orange-500\">\r\n                    <span className=\"font-semibold\">Tramos duplicados:</span> {z.tramosDuplicados.map((t: any) => `${t.origen} - ${t.destino}`).join(', ')}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <div className=\"flex justify-end gap-2 mt-6\">\r\n          <button type=\"button\" onClick={() => setBulkModalOpen(false)} className=\"bg-gray-400 text-white px-4 py-2 rounded\">Cancelar</button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleBulkConfirm}\r\n            className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n            disabled={bulkErrors.length > 0}\r\n          >\r\n            Confirmar importación\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      {/* Modal de ciudades no configuradas */}\r\n      <Modal\r\n        isOpen={showCitiesModal}\r\n        onRequestClose={() => setShowCitiesModal(false)}\r\n        contentLabel=\"Ciudades no configuradas\"\r\n        className=\"bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto mt-20 outline-none\"\r\n        overlayClassName=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center\"\r\n      >\r\n        <h2 className=\"text-xl font-bold mb-4\">Ciudades no configuradas en zonas</h2>\r\n        {unconfiguredCities.length > 0 ? (\r\n          <div>\r\n            <p className=\"mb-4 text-gray-700\">\r\n              Las siguientes ciudades están presentes en los viajes pero no están configuradas en ninguna zona. \r\n              Por favor, asígnalas a una zona para poder usarlas correctamente:\r\n            </p>\r\n            <div className=\"max-h-60 overflow-y-auto\">\r\n              <ul className=\"list-disc pl-5 text-gray-800 space-y-1\">\r\n                {unconfiguredCities.map((city, index) => (\r\n                  <li key={index} className=\"text-sm\">{city}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-green-600 font-medium\">\r\n            ¡Excelente! Todas las ciudades presentes en los viajes están correctamente configuradas en zonas.\r\n          </p>\r\n        )}\r\n        <div className=\"flex justify-end mt-6\">\r\n          <button\r\n            onClick={() => setShowCitiesModal(false)}\r\n            className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n          >\r\n            Entendido\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      {/* Eliminar el modal y lógica de edición de tramo individual */}\r\n      {successMsg && (\r\n        <div className=\"bg-green-100 text-green-800 px-4 py-2 rounded mb-4 text-center font-semibold\">\r\n          {successMsg}\r\n        </div>\r\n      )}\r\n      <table className=\"min-w-full border divide-y divide-gray-200 text-sm mt-8\">\r\n        <thead className=\"bg-gray-100\">\r\n          <tr>\r\n            <th className=\"px-4 py-2 text-left\">Nombre</th>\r\n            <th className=\"px-4 py-2 text-left\">Porcentaje (%)</th>\r\n            <th className=\"px-4 py-2 text-left\">Tramos asociados</th>\r\n            <th className=\"px-4 py-2 text-left\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {zones.map(zone => (\r\n            <tr key={zone.id} className=\"border-b align-top\">\r\n              <td className=\"px-4 py-2 font-medium\">{zone.nombre}</td>\r\n              <td className=\"px-4 py-2\">{zone.porcentaje}</td>\r\n              <td className=\"px-4 py-2\">\r\n                {routesByZone[zone.id]?.length ? (\r\n                  <table className=\"border w-full text-xs\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-2 py-1\">Origen</th>\r\n                        <th className=\"px-2 py-1\">Destino</th>\r\n                        <th className=\"px-2 py-1\">Km</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {routesByZone[zone.id].map((r, i) => (\r\n                        <tr key={i}>\r\n                          <td className=\"px-2 py-1\">{r.origen}</td>\r\n                          <td className=\"px-2 py-1\">{r.destino}</td>\r\n                          <td className=\"px-2 py-1\">{r.kilometraje}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                ) : (\r\n                  <span className=\"text-gray-400\">Sin tramos</span>\r\n                )}\r\n              </td>\r\n              <td className=\"px-4 py-2\">\r\n                <button\r\n                  className=\"bg-yellow-500 text-white px-2 py-1 rounded mr-2\"\r\n                  onClick={() => handleEditZone(zone)}\r\n                >\r\n                  Editar\r\n                </button>\r\n                <button\r\n                  className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                  onClick={() => handleDeleteZone(zone.id)}\r\n                >\r\n                  Eliminar zona\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistroRecorridos; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}