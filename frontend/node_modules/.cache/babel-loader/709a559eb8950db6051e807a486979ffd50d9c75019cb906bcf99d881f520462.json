{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getAuthHeaders } from '../services/api';\n// Cambia esta URL por la de tu backend\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/productions';\nexport function useProduccionApi() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Obtener producciones\n  const fetchProducciones = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(API_URL, {\n        headers: getAuthHeaders()\n      });\n      if (!res.ok) throw new Error('Error al obtener producciones');\n      return await res.json();\n    } catch (err) {\n      setError(err.message);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Crear o actualizar producci贸n\n  const saveProduccion = async produccion => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(API_URL, {\n        method: produccion.id ? 'PUT' : 'POST',\n        headers: {\n          ...getAuthHeaders(),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(produccion)\n      });\n      if (!res.ok) throw new Error('Error al guardar producci贸n');\n      return true;\n    } catch (err) {\n      setError(err.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    fetchProducciones,\n    saveProduccion,\n    loading,\n    error\n  };\n}\n\n/**\r\n * Ejemplo de uso:\r\n *\r\n * const { fetchProducciones, saveProduccion, loading, error } = useProduccionApi();\r\n *\r\n * useEffect(() => { fetchProducciones(); }, []);\r\n *\r\n * saveProduccion({...});\r\n */\n_s(useProduccionApi, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");","map":{"version":3,"names":["useState","getAuthHeaders","API_URL","process","env","REACT_APP_API_URL","useProduccionApi","_s","loading","setLoading","error","setError","fetchProducciones","res","fetch","headers","ok","Error","json","err","message","saveProduccion","produccion","method","id","body","JSON","stringify"],"sources":["C:/Users/pasaj/Music/pullman-payment-system/frontend/src/hooks/useProduccionApi.ts"],"sourcesContent":["import { useState } from 'react';\r\nimport { getAuthHeaders } from '../services/api';\r\n\r\nexport interface Produccion {\r\n  id?: number;\r\n  decena: string;\r\n  empresario: string;\r\n  zona: string;\r\n  totalRecorridos: number;\r\n  porcentajeZona: number;\r\n  monto: number;\r\n  editable: boolean;\r\n}\r\n\r\n// Cambia esta URL por la de tu backend\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api/productions';\r\n\r\nexport function useProduccionApi() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Obtener producciones\r\n  const fetchProducciones = async (): Promise<Produccion[]> => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const res = await fetch(API_URL, { headers: getAuthHeaders() });\r\n      if (!res.ok) throw new Error('Error al obtener producciones');\r\n      return await res.json();\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Crear o actualizar producci贸n\r\n  const saveProduccion = async (produccion: Produccion): Promise<boolean> => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const res = await fetch(API_URL, {\r\n        method: produccion.id ? 'PUT' : 'POST',\r\n        headers: { ...getAuthHeaders(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(produccion),\r\n      });\r\n      if (!res.ok) throw new Error('Error al guardar producci贸n');\r\n      return true;\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    fetchProducciones,\r\n    saveProduccion,\r\n    loading,\r\n    error,\r\n  };\r\n}\r\n\r\n/**\r\n * Ejemplo de uso:\r\n *\r\n * const { fetchProducciones, saveProduccion, loading, error } = useProduccionApi();\r\n *\r\n * useEffect(() => { fetchProducciones(); }, []);\r\n *\r\n * saveProduccion({...});\r\n */ "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,iBAAiB;AAahD;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uCAAuC;AAExF,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;;EAEvD;EACA,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAmC;IAC3DH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACZ,OAAO,EAAE;QAAEa,OAAO,EAAEd,cAAc,CAAC;MAAE,CAAC,CAAC;MAC/D,IAAI,CAACY,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,OAAO,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACjBR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,EAAE;IACX,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMY,cAAc,GAAG,MAAOC,UAAsB,IAAuB;IACzEb,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACZ,OAAO,EAAE;QAC/BqB,MAAM,EAAED,UAAU,CAACE,EAAE,GAAG,KAAK,GAAG,MAAM;QACtCT,OAAO,EAAE;UAAE,GAAGd,cAAc,CAAC,CAAC;UAAE,cAAc,EAAE;QAAmB,CAAC;QACpEwB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU;MACjC,CAAC,CAAC;MACF,IAAI,CAACT,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,OAAO,IAAI;IACb,CAAC,CAAC,OAAOE,GAAQ,EAAE;MACjBR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,KAAK;IACd,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLG,iBAAiB;IACjBS,cAAc;IACdb,OAAO;IACPE;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARAH,EAAA,CAhDgBD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}