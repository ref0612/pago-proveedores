{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pasaj\\\\Music\\\\pullman-payment-system\\\\frontend\\\\src\\\\hooks\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const savedUser = localStorage.getItem('currentUser');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const isAdmin = () => (user === null || user === void 0 ? void 0 : user.rol) === 'ADMIN';\n  const isValidador = () => (user === null || user === void 0 ? void 0 : user.rol) === 'VALIDADOR' || (user === null || user === void 0 ? void 0 : user.rol) === 'ADMIN';\n  const canEditValidated = () => (user === null || user === void 0 ? void 0 : user.rol) === 'ADMIN';\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8080/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setUser(data.user);\n        localStorage.setItem('currentUser', JSON.stringify(data.user));\n        return true;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.error('Error en login:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('currentUser');\n  };\n  const initializeUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/users/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      await response.json();\n      return response.ok;\n    } catch (error) {\n      console.error('Error al inicializar usuarios:', error);\n      return false;\n    }\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      initializeUsers,\n      updateUser,\n      isAdmin,\n      isValidador,\n      canEditValidated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth debe usarse dentro de AuthProvider');\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","isAdmin","rol","isValidador","canEditValidated","login","email","password","response","fetch","method","headers","body","stringify","data","json","success","setItem","error","console","logout","removeItem","initializeUsers","ok","updateUser","updatedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/pasaj/Music/pullman-payment-system/frontend/src/hooks/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nexport interface User {\r\n  id: number;\r\n  nombre: string;\r\n  email: string;\r\n  rol: 'ADMIN' | 'VALIDADOR' | 'MIEMBRO' | 'INVITADO';\r\n  activo: boolean;\r\n  canViewTrips: boolean;\r\n  canViewRecorridos: boolean;\r\n  canViewProduccion: boolean;\r\n  canViewValidacion: boolean;\r\n  canViewLiquidacion: boolean;\r\n  canViewReportes: boolean;\r\n  canViewUsuarios: boolean;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  initializeUsers: () => Promise<boolean>;\r\n  updateUser: (updatedUser: User) => void;\r\n  isAdmin: () => boolean;\r\n  isValidador: () => boolean;\r\n  canEditValidated: () => boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('currentUser');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const isAdmin = () => user?.rol === 'ADMIN';\r\n  const isValidador = () => user?.rol === 'VALIDADOR' || user?.rol === 'ADMIN';\r\n  const canEditValidated = () => user?.rol === 'ADMIN';\r\n\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setUser(data.user);\r\n        localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('currentUser');\r\n  };\r\n\r\n  const initializeUsers = async (): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/users/initialize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      await response.json();\r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('Error al inicializar usuarios:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout, initializeUsers, updateUser, isAdmin, isValidador, canEditValidated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth debe usarse dentro de AuthProvider');\r\n  return context;\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}